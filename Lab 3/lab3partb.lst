680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 27 Nov 2020      Time: 17:04:30          Source: C:\USERS\VICTO\DOCUMENTS\ELEC4THYEAR\CPEN412\LABS\LAB3PARTB.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  2030      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  0000      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  1FF8      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  1FFC      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  2030 0800 
08000034  2000      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  0A74      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\M68KV6.0 - 800BY480[LAB5]\M68KV6.0 - 800BY480 - (VERILOG) FOR STUDENTS (2020)\LAB3_PARTB.C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; #include <stdlib.h>
                      49   ; /*************************************************************
                      50   ; ** SPI Controller registers
                      51   ; **************************************************************/
                      52   ; // I2C Registers
                      53   ; #define PRERlo              (*(volatile unsigned char *)(0x00408000))
                      54   ; #define PRERhi              (*(volatile unsigned char *)(0x00408002))
                      55   ; #define CTR                 (*(volatile unsigned char *)(0x00408004))
                      56   ; #define TXR_RXR             (*(volatile unsigned char *)(0x00408006))
                      57   ; #define CR_SR              ( *(volatile unsigned char *)(0x00408008))
                      58   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                      59   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                      60   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                      61   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                      62   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                      63   ; // these two macros enable or disable the flash memory chip enable off SSN_O[7..0]
                      64   ; // in this case we assume there is only 1 device connected to SSN_O[0] so we can
                      65   ; // write hex FE to the SPI_CS to enable it (the enable on the flash chip is active low)
                      66   ; // and write FF to disable it
                      67   ; typedef int bool;
                      68   ; #define false 0
                      69   ; #define true 1
                      70   ; #define   Enable_SPI_CS()             SPI_CS = 0xFE
                      71   ; #define   Disable_SPI_CS()            SPI_CS = 0xFF
                      72   ; // Defining commands
                      73   ; int Write_Enable_Command =  0x06;
                      74   ; int Page_Program_Command =  0x02;
                      75   ; int Erase_Chip_Command   =  0xC7;
                      76   ; int Read_Status_Register_Command = 0x05;
                      77   ; int Read_Flash_Chip_Command = 0x03;
                      78   ; int First_Address_Byte   =  0x00;
                      79   ; int Test_Data_Byte       =  0x09;
                      80   ; int Dummy_Data_Byte      =  0xFF;
                      81   ; /*********************************************************************************************
                      82   ; *Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                      83   ; *********************************************************************************************/
                      84   ; void Init_RS232(void)
                      85   ; {
                      86   _Init_RS232:
                      87   ; RS232_Control = (char)(0x15) ; //  %00010101    divide by 16 clock, set rts low, 8 bits no parity, 1 stop bit transmitter interrupt disabled
0800003E  13FC 0015   88          move.b    #21,4194368
08000042  0040 0040 
                      89   ; RS232_Baud = (char)(0x1) ;      // program baud rate generator 000 = 230k, 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
08000046  13FC 0001   90          move.b    #1,4194372
0800004A  0040 0044 
0800004E  4E75        91          rts
                      92   ; }
                      93   ; int kbhit(void)
                      94   ; {
                      95   _kbhit:
                      96   ; if(((char)(RS232_Status) & (char)(0x01)) == (char)(0x01))    // wait for Rx bit in status register to be '1'
08000050  1039 0040   97          move.b    4194368,D0
08000054  0040      
08000056  C03C 0001   98          and.b     #1,D0
0800005A  0C00 0001   99          cmp.b     #1,D0
0800005E  6604       100          bne.s     kbhit_1
                     101   ; return 1 ;
08000060  7001       102          moveq     #1,D0
08000062  6002       103          bra.s     kbhit_3
                     104   kbhit_1:
                     105   ; else
                     106   ; return 0 ;
08000064  4280       107          clr.l     D0
                     108   kbhit_3:
08000066  4E75       109          rts
                     110   ; }
                     111   ; /*********************************************************************************************************
                     112   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     113   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     114   ; **  to allow the board to communicate with HyperTerminal Program
                     115   ; **
                     116   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     117   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     118   ; **  call _putch() also
                     119   ; *********************************************************************************************************/
                     120   ; int _putch( int c)
                     121   ; {
                     122   __putch:
08000068  4E56 0000  123          link      A6,#0
                     124   ; while(((char)(RS232_Status) & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     125   _putch_1:
0800006C  1039 0040  126          move.b    4194368,D0
08000070  0040      
08000072  C03C 0002  127          and.b     #2,D0
08000076  0C00 0002  128          cmp.b     #2,D0
0800007A  6702       129          beq.s     _putch_3
0800007C  60EE       130          bra       _putch_1
                     131   _putch_3:
                     132   ; ;
                     133   ; (char)(RS232_TxData) = ((char)(c) & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
0800007E  202E 0008  134          move.l    8(A6),D0
08000082  C03C 007F  135          and.b     #127,D0
08000086  13C0 0040  136          move.b    D0,4194370
0800008A  0042      
                     137   ; return c ;                                              // putchar() expects the character to be returned
0800008C  202E 0008  138          move.l    8(A6),D0
08000090  4E5E       139          unlk      A6
08000092  4E75       140          rts
                     141   ; }
                     142   ; /*********************************************************************************************************
                     143   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     144   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     145   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     146   ; **
                     147   ; **  NOTE you do not call this function directly, instead you call the normal _getch() function
                     148   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call _getch() so will
                     149   ; **  call _getch() also
                     150   ; *********************************************************************************************************/
                     151   ; int _getch( void )
                     152   ; {
                     153   __getch:
08000094  2F02       154          move.l    D2,-(A7)
                     155   ; int c ;
                     156   ; while(((char)(RS232_Status) & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     157   _getch_1:
08000096  1039 0040  158          move.b    4194368,D0
0800009A  0040      
0800009C  C03C 0001  159          and.b     #1,D0
080000A0  0C00 0001  160          cmp.b     #1,D0
080000A4  6702       161          beq.s     _getch_3
080000A6  60EE       162          bra       _getch_1
                     163   _getch_3:
                     164   ; ;
                     165   ; c = (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
080000A8  1039 0040  166          move.b    4194370,D0
080000AC  0042      
080000AE  C0BC 0000  167          and.l     #255,D0
080000B2  00FF      
080000B4  C0BC 0000  168          and.l     #127,D0
080000B8  007F      
080000BA  2400       169          move.l    D0,D2
                     170   ; // shall we echo the character? Echo is set to TRUE at reset, but for speed we don't want to echo when downloading code with the 'L' debugger command
                     171   ; if(1)
                     172   ; _putch(c);
080000BC  2F02       173          move.l    D2,-(A7)
080000BE  4EB9 0800  174          jsr       __putch
080000C2  0068      
080000C4  584F       175          addq.w    #4,A7
                     176   ; return c ;
080000C6  2002       177          move.l    D2,D0
080000C8  241F       178          move.l    (A7)+,D2
080000CA  4E75       179          rts
                     180   ; }
                     181   ; // flush the input stream for any unread characters
                     182   ; void FlushKeyboard(void)
                     183   ; {
                     184   _FlushKeyboard:
080000CC  4E56 FFFC  185          link      A6,#-4
                     186   ; char c ;
                     187   ; while(1)    {
                     188   FlushKeyboard_1:
                     189   ; if(((char)(RS232_Status) & (char)(0x01)) == (char)(0x01))    // if Rx bit in status register is '1'
080000D0  1039 0040  190          move.b    4194368,D0
080000D4  0040      
080000D6  C03C 0001  191          and.b     #1,D0
080000DA  0C00 0001  192          cmp.b     #1,D0
080000DE  6610       193          bne.s     FlushKeyboard_4
                     194   ; c = ((char)(RS232_RxData) & (char)(0x7f)) ;
080000E0  1039 0040  195          move.b    4194370,D0
080000E4  0042      
080000E6  C03C 007F  196          and.b     #127,D0
080000EA  1D40 FFFF  197          move.b    D0,-1(A6)
080000EE  6002       198          bra.s     FlushKeyboard_5
                     199   FlushKeyboard_4:
                     200   ; else
                     201   ; return ;
080000F0  6002       202          bra.s     FlushKeyboard_6
                     203   FlushKeyboard_5:
080000F2  60DC       204          bra       FlushKeyboard_1
                     205   FlushKeyboard_6:
080000F4  4E5E       206          unlk      A6
080000F6  4E75       207          rts
                     208   ; }
                     209   ; }
                     210   ; // converts hex char to 4 bit binary equiv in range 0000-1111 (0-F)
                     211   ; // char assumed to be a valid hex char 0-9, a-f, A-F
                     212   ; char xtod(int c)
                     213   ; {
                     214   _xtod:
080000F8  4E56 0000  215          link      A6,#0
080000FC  2F02       216          move.l    D2,-(A7)
080000FE  242E 0008  217          move.l    8(A6),D2
                     218   ; if ((char)(c) <= (char)('9'))
08000102  0C02 0039  219          cmp.b     #57,D2
08000106  6E08       220          bgt.s     xtod_1
                     221   ; return c - (char)(0x30);    // 0 - 9 = 0x30 - 0x39 so convert to number by sutracting 0x30
08000108  1002       222          move.b    D2,D0
0800010A  0400 0030  223          sub.b     #48,D0
0800010E  6014       224          bra.s     xtod_3
                     225   xtod_1:
                     226   ; else if((char)(c) > (char)('F'))    // assume lower case
08000110  0C02 0046  227          cmp.b     #70,D2
08000114  6F08       228          ble.s     xtod_4
                     229   ; return c - (char)(0x57);    // a-f = 0x61-66 so needs to be converted to 0x0A - 0x0F so subtract 0x57
08000116  1002       230          move.b    D2,D0
08000118  0400 0057  231          sub.b     #87,D0
0800011C  6006       232          bra.s     xtod_3
                     233   xtod_4:
                     234   ; else
                     235   ; return c - (char)(0x37);    // A-F = 0x41-46 so needs to be converted to 0x0A - 0x0F so subtract 0x37
0800011E  1002       236          move.b    D2,D0
08000120  0400 0037  237          sub.b     #55,D0
                     238   xtod_3:
08000124  241F       239          move.l    (A7)+,D2
08000126  4E5E       240          unlk      A6
08000128  4E75       241          rts
                     242   ; }
                     243   ; int Get2HexDigits(char *CheckSumPtr)
                     244   ; {
                     245   _Get2HexDigits:
0800012A  4E56 0000  246          link      A6,#0
0800012E  2F02       247          move.l    D2,-(A7)
                     248   ; register int i = (xtod(_getch()) << 4) | (xtod(_getch()));
08000130  2F00       249          move.l    D0,-(A7)
08000132  4EB9 0800  250          jsr       __getch
08000136  0094      
08000138  2200       251          move.l    D0,D1
0800013A  201F       252          move.l    (A7)+,D0
0800013C  2F01       253          move.l    D1,-(A7)
0800013E  4EB9 0800  254          jsr       _xtod
08000142  00F8      
08000144  584F       255          addq.w    #4,A7
08000146  C0BC 0000  256          and.l     #255,D0
0800014A  00FF      
0800014C  E980       257          asl.l     #4,D0
0800014E  2F00       258          move.l    D0,-(A7)
08000150  2F01       259          move.l    D1,-(A7)
08000152  4EB9 0800  260          jsr       __getch
08000156  0094      
08000158  221F       261          move.l    (A7)+,D1
0800015A  2F00       262          move.l    D0,-(A7)
0800015C  4EB9 0800  263          jsr       _xtod
08000160  00F8      
08000162  584F       264          addq.w    #4,A7
08000164  2200       265          move.l    D0,D1
08000166  201F       266          move.l    (A7)+,D0
08000168  C2BC 0000  267          and.l     #255,D1
0800016C  00FF      
0800016E  8081       268          or.l      D1,D0
08000170  2400       269          move.l    D0,D2
                     270   ; if(CheckSumPtr)
08000172  4AAE 0008  271          tst.l     8(A6)
08000176  6706       272          beq.s     Get2HexDigits_1
                     273   ; *CheckSumPtr += i ;
08000178  206E 0008  274          move.l    8(A6),A0
0800017C  D510       275          add.b     D2,(A0)
                     276   Get2HexDigits_1:
                     277   ; return i ;
0800017E  2002       278          move.l    D2,D0
08000180  241F       279          move.l    (A7)+,D2
08000182  4E5E       280          unlk      A6
08000184  4E75       281          rts
                     282   ; }
                     283   ; int Get4HexDigits(char* CheckSumPtr)
                     284   ; {
                     285   _Get4HexDigits:
08000186  4E56 0000  286          link      A6,#0
                     287   ; return (Get2HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
0800018A  2F2E 0008  288          move.l    8(A6),-(A7)
0800018E  4EB9 0800  289          jsr       _Get2HexDigits
08000192  012A      
08000194  584F       290          addq.w    #4,A7
08000196  E180       291          asl.l     #8,D0
08000198  2F00       292          move.l    D0,-(A7)
0800019A  2F2E 0008  293          move.l    8(A6),-(A7)
0800019E  4EB9 0800  294          jsr       _Get2HexDigits
080001A2  012A      
080001A4  584F       295          addq.w    #4,A7
080001A6  2200       296          move.l    D0,D1
080001A8  201F       297          move.l    (A7)+,D0
080001AA  8081       298          or.l      D1,D0
080001AC  4E5E       299          unlk      A6
080001AE  4E75       300          rts
                     301   ; }
                     302   ; int Get6HexDigits(char* CheckSumPtr)
                     303   ; {
                     304   _Get6HexDigits:
080001B0  4E56 0000  305          link      A6,#0
                     306   ; return (Get4HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080001B4  2F2E 0008  307          move.l    8(A6),-(A7)
080001B8  4EB9 0800  308          jsr       _Get4HexDigits
080001BC  0186      
080001BE  584F       309          addq.w    #4,A7
080001C0  E180       310          asl.l     #8,D0
080001C2  2F00       311          move.l    D0,-(A7)
080001C4  2F2E 0008  312          move.l    8(A6),-(A7)
080001C8  4EB9 0800  313          jsr       _Get2HexDigits
080001CC  012A      
080001CE  584F       314          addq.w    #4,A7
080001D0  2200       315          move.l    D0,D1
080001D2  201F       316          move.l    (A7)+,D0
080001D4  8081       317          or.l      D1,D0
080001D6  4E5E       318          unlk      A6
080001D8  4E75       319          rts
                     320   ; }
                     321   ; int Get8HexDigits(char* CheckSumPtr)
                     322   ; {
                     323   _Get8HexDigits:
080001DA  4E56 0000  324          link      A6,#0
                     325   ; return (Get4HexDigits(CheckSumPtr) << 16) | (Get4HexDigits(CheckSumPtr));
080001DE  2F2E 0008  326          move.l    8(A6),-(A7)
080001E2  4EB9 0800  327          jsr       _Get4HexDigits
080001E6  0186      
080001E8  584F       328          addq.w    #4,A7
080001EA  E180       329          asl.l     #8,D0
080001EC  E180       330          asl.l     #8,D0
080001EE  2F00       331          move.l    D0,-(A7)
080001F0  2F2E 0008  332          move.l    8(A6),-(A7)
080001F4  4EB9 0800  333          jsr       _Get4HexDigits
080001F8  0186      
080001FA  584F       334          addq.w    #4,A7
080001FC  2200       335          move.l    D0,D1
080001FE  201F       336          move.l    (A7)+,D0
08000200  8081       337          or.l      D1,D0
08000202  4E5E       338          unlk      A6
08000204  4E75       339          rts
                     340   ; }
                     341   ; void DELAY(void){
                     342   _DELAY:
08000206  4E56 FFFC  343          link      A6,#-4
0800020A  2F02       344          move.l    D2,-(A7)
                     345   ; int i, j;
                     346   ; for (i = 0; i<1000; i++){
0800020C  4282       347          clr.l     D2
                     348   DELAY_1:
0800020E  0C82 0000  349          cmp.l     #1000,D2
08000212  03E8      
08000214  6C12       350          bge.s     DELAY_3
                     351   ; for (i = 0; i<10000; i++){
08000216  4282       352          clr.l     D2
                     353   DELAY_4:
08000218  0C82 0000  354          cmp.l     #10000,D2
0800021C  2710      
0800021E  6C04       355          bge.s     DELAY_6
                     356   ; ;
08000220  5282       357          addq.l    #1,D2
08000222  60F4       358          bra       DELAY_4
                     359   DELAY_6:
08000224  5282       360          addq.l    #1,D2
08000226  60E6       361          bra       DELAY_1
                     362   DELAY_3:
08000228  241F       363          move.l    (A7)+,D2
0800022A  4E5E       364          unlk      A6
0800022C  4E75       365          rts
                     366   ; }
                     367   ; }
                     368   ; }
                     369   ; //Initialize and Enable the IIC Controller
                     370   ; void IIC_Init(void){
                     371   _IIC_Init:
                     372   ; PRERlo = 0x31;
0800022E  13FC 0031  373          move.b    #49,4227072
08000232  0040 8000 
                     374   ; PRERhi = 0x00;
08000236  4239 0040  375          clr.b     4227074
0800023A  8002      
                     376   ; CTR = 0x80;
0800023C  13FC 0080  377          move.b    #128,4227076
08000240  0040 8004 
08000244  4E75       378          rts
                     379   ; }
                     380   ; //Check Status Register TIP bit (bit 1) to see when transmit finished
                     381   ; void WaitForIICTransmitComplete(void){
                     382   _WaitForIICTransmitComplete:
                     383   ; //printf("\r\nWaiting For Transmit Complete");
                     384   ; while(CR_SR & (1<<1)){
                     385   WaitForIICTransmitComplete_1:
08000246  1039 0040  386          move.b    4227080,D0
0800024A  8008      
0800024C  C03C 0002  387          and.b     #2,D0
08000250  6702       388          beq.s     WaitForIICTransmitComplete_3
                     389   ; //printf("\r\n%d", CR_SR);
                     390   ; }
08000252  60F2       391          bra       WaitForIICTransmitComplete_1
                     392   WaitForIICTransmitComplete_3:
                     393   ; return;
08000254  4E75       394          rts
                     395   ; }
                     396   ; //Wait for acknowledgement from slave
                     397   ; void WaitForACK(void){
                     398   _WaitForACK:
                     399   ; //printf("\r\nWaiting For ACK");
                     400   ; while(CR_SR&(1<<7)){
                     401   WaitForACK_1:
08000256  1039 0040  402          move.b    4227080,D0
0800025A  8008      
0800025C  C03C 0080  403          and.b     #128,D0
08000260  6702       404          beq.s     WaitForACK_3
                     405   ; //printf("\r\n%d", CR_SR);
                     406   ; }
08000262  60F2       407          bra       WaitForACK_1
                     408   WaitForACK_3:
                     409   ; return;
08000264  4E75       410          rts
                     411   ; }
                     412   ; //Polling IIC Status Register to see if data has been read
                     413   ; void CheckDataReceived(void){
                     414   _CheckDataReceived:
                     415   ; //printf("\r\n%d", CR_SR);
                     416   ; while(!CR_SR&(1<<0)){
                     417   CheckDataReceived_1:
08000266  4A39 0040  418          tst.b     4227080
0800026A  8008      
0800026C  6604       419          bne.s     CheckDataReceived_4
0800026E  7001       420          moveq     #1,D0
08000270  6002       421          bra.s     CheckDataReceived_5
                     422   CheckDataReceived_4:
08000272  4280       423          clr.l     D0
                     424   CheckDataReceived_5:
08000274  C03C 0001  425          and.b     #1,D0
08000278  6702       426          beq.s     CheckDataReceived_3
                     427   ; }
0800027A  60EA       428          bra       CheckDataReceived_1
                     429   CheckDataReceived_3:
                     430   ; return;
0800027C  4E75       431          rts
                     432   ; }
                     433   ; //Read Byte from EEProm
                     434   ; void ReadByteEEProm(int high_addr, int low_addr, int count, int block_num){
                     435   _ReadByteEEProm:
0800027E  4E56 0000  436          link      A6,#0
08000282  48E7 2030  437          movem.l   D2/A2/A3,-(A7)
08000286  45F9 0800  438          lea       _WaitForIICTransmitComplete.L,A2
0800028A  0246      
0800028C  47F9 0800  439          lea       _WaitForACK.L,A3
08000290  0256      
                     440   ; int c;
                     441   ; DELAY();
08000292  4EB9 0800  442          jsr       _DELAY
08000296  0206      
                     443   ; //Write Slave Address, Enable Start Condition
                     444   ; //printf("\r\nWriting to slave address.....");
                     445   ; if (block_num == 0) // Block 0 Selected
08000298  202E 0014  446          move.l    20(A6),D0
0800029C  660A       447          bne.s     ReadByteEEProm_1
                     448   ; TXR_RXR = 0xA4; // Write Slave Address to TX register 10100100
0800029E  13FC 00A4  449          move.b    #164,4227078
080002A2  0040 8006 
080002A6  6008       450          bra.s     ReadByteEEProm_2
                     451   ReadByteEEProm_1:
                     452   ; else //Block 1
                     453   ; TXR_RXR = 0xAC; // Write Slave Address to TX register 10101100
080002A8  13FC 00AC  454          move.b    #172,4227078
080002AC  0040 8006 
                     455   ReadByteEEProm_2:
                     456   ; CR_SR = 0x91; //10010001: Bit 7 START, BIT 4 Write to Slave, BIT 0 Clear Interrupts
080002B0  13FC 0091  457          move.b    #145,4227080
080002B4  0040 8008 
                     458   ; WaitForIICTransmitComplete(); //Check if transmit is complete
080002B8  4E92       459          jsr       (A2)
                     460   ; WaitForACK();
080002BA  4E93       461          jsr       (A3)
                     462   ; //Write Two Bytes for Internal Address
                     463   ; //printf("\r\nWriting high byte internal address.....");
                     464   ; TXR_RXR = high_addr; // Write High Byte Internal Address to TX register
080002BC  202E 0008  465          move.l    8(A6),D0
080002C0  13C0 0040  466          move.b    D0,4227078
080002C4  8006      
                     467   ; CR_SR = 0x11;
080002C6  13FC 0011  468          move.b    #17,4227080
080002CA  0040 8008 
                     469   ; WaitForIICTransmitComplete(); //Check if transmit is complete
080002CE  4E92       470          jsr       (A2)
                     471   ; WaitForACK();
080002D0  4E93       472          jsr       (A3)
                     473   ; //printf("\r\nWriting low byte internal address.....");
                     474   ; TXR_RXR = low_addr; // Write Low Byte Internal Address to TX register
080002D2  202E 000C  475          move.l    12(A6),D0
080002D6  13C0 0040  476          move.b    D0,4227078
080002DA  8006      
                     477   ; CR_SR =0x11;
080002DC  13FC 0011  478          move.b    #17,4227080
080002E0  0040 8008 
                     479   ; WaitForIICTransmitComplete(); //Check if transmit is complete
080002E4  4E92       480          jsr       (A2)
                     481   ; WaitForACK();
080002E6  4E93       482          jsr       (A3)
                     483   ; //Write Slave Address Again and Enable Start Condition, but this time its a read
                     484   ; //printf("\r\nReading data byte.....");
                     485   ; if (block_num == 0) // Block 0 Selected
080002E8  202E 0014  486          move.l    20(A6),D0
080002EC  660A       487          bne.s     ReadByteEEProm_3
                     488   ; TXR_RXR = 0xA5; // Write Slave Address to TX register 10100101
080002EE  13FC 00A5  489          move.b    #165,4227078
080002F2  0040 8006 
080002F6  6008       490          bra.s     ReadByteEEProm_4
                     491   ReadByteEEProm_3:
                     492   ; else
                     493   ; TXR_RXR = 0xAD; // Write Slave Address to TX register 10101101
080002F8  13FC 00AD  494          move.b    #173,4227078
080002FC  0040 8006 
                     495   ReadByteEEProm_4:
                     496   ; CR_SR =  0x91;//10010001: Bit 7 START, BIT 5 Write to Slave, BIT 0 Clear Interrupts
08000300  13FC 0091  497          move.b    #145,4227080
08000304  0040 8008 
                     498   ; WaitForIICTransmitComplete(); //Check if transmit is complete
08000308  4E92       499          jsr       (A2)
                     500   ; WaitForACK();
0800030A  4E93       501          jsr       (A3)
                     502   ; while(count>1){
                     503   ReadByteEEProm_5:
0800030C  202E 0010  504          move.l    16(A6),D0
08000310  0C80 0000  505          cmp.l     #1,D0
08000314  0001      
08000316  6F34       506          ble.s     ReadByteEEProm_7
                     507   ; CR_SR = 0x21; // 00100001 Read , ACK, IACK
08000318  13FC 0021  508          move.b    #33,4227080
0800031C  0040 8008 
                     509   ; WaitForIICTransmitComplete(); //Check if transmit is complete
08000320  4E92       510          jsr       (A2)
                     511   ; CheckDataReceived(); //Check if byte is recieved
08000322  4EB9 0800  512          jsr       _CheckDataReceived
08000326  0266      
                     513   ; c = TXR_RXR; //Read Byte
08000328  1039 0040  514          move.b    4227078,D0
0800032C  8006      
0800032E  C0BC 0000  515          and.l     #255,D0
08000332  00FF      
08000334  2400       516          move.l    D0,D2
                     517   ; printf("\r\nThe data byte read is %x", c);
08000336  2F02       518          move.l    D2,-(A7)
08000338  4879 0800  519          pea       @lab3_p~1_1.L
0800033C  1858      
0800033E  4EB9 0800  520          jsr       _printf
08000342  0F3A      
08000344  504F       521          addq.w    #8,A7
                     522   ; count--;
08000346  53AE 0010  523          subq.l    #1,16(A6)
0800034A  60C0       524          bra       ReadByteEEProm_5
                     525   ReadByteEEProm_7:
                     526   ; }
                     527   ; CR_SR = 0x29; // 00101001 Read , NACK, IACK
0800034C  13FC 0029  528          move.b    #41,4227080
08000350  0040 8008 
                     529   ; WaitForIICTransmitComplete(); //Check if transmit is complete
08000354  4E92       530          jsr       (A2)
                     531   ; CheckDataReceived(); //Check if byte is recieved
08000356  4EB9 0800  532          jsr       _CheckDataReceived
0800035A  0266      
                     533   ; c = TXR_RXR; //Read Byte
0800035C  1039 0040  534          move.b    4227078,D0
08000360  8006      
08000362  C0BC 0000  535          and.l     #255,D0
08000366  00FF      
08000368  2400       536          move.l    D0,D2
                     537   ; printf("\r\nThe data byte read is %x", c);
0800036A  2F02       538          move.l    D2,-(A7)
0800036C  4879 0800  539          pea       @lab3_p~1_1.L
08000370  1858      
08000372  4EB9 0800  540          jsr       _printf
08000376  0F3A      
08000378  504F       541          addq.w    #8,A7
                     542   ; CR_SR = 0x41;//01000001
0800037A  13FC 0041  543          move.b    #65,4227080
0800037E  0040 8008 
                     544   ; WaitForIICTransmitComplete(); //Check if transmit is complete
08000382  4E92       545          jsr       (A2)
08000384  4CDF 0C04  546          movem.l   (A7)+,D2/A2/A3
08000388  4E5E       547          unlk      A6
0800038A  4E75       548          rts
                     549   ; //return c;
                     550   ; }
                     551   ; //Write Byte to EEProm
                     552   ; void WriteByteEEProm(int byte, int upper_addr, int lower_addr, int count, int block_num){
                     553   _WriteByteEEProm:
0800038C  4E56 0000  554          link      A6,#0
08000390  48E7 0030  555          movem.l   A2/A3,-(A7)
08000394  45F9 0800  556          lea       _WaitForIICTransmitComplete.L,A2
08000398  0246      
0800039A  47F9 0800  557          lea       _WaitForACK.L,A3
0800039E  0256      
                     558   ; //Write Slave Address, Enable Start Condition
                     559   ; //printf("\r\nWriting to slave address.....");
                     560   ; //printf("\r\nCOUNT: %d",count);
                     561   ; DELAY();
080003A0  4EB9 0800  562          jsr       _DELAY
080003A4  0206      
                     563   ; if (block_num == 0) // Block 0 Selected
080003A6  202E 0018  564          move.l    24(A6),D0
080003AA  660A       565          bne.s     WriteByteEEProm_1
                     566   ; TXR_RXR = 0xA4; // Write Slave Address to TX register 10100100
080003AC  13FC 00A4  567          move.b    #164,4227078
080003B0  0040 8006 
080003B4  6008       568          bra.s     WriteByteEEProm_2
                     569   WriteByteEEProm_1:
                     570   ; else //Block 1
                     571   ; TXR_RXR = 0xAC; // Write Slave Address to TX register 10101100
080003B6  13FC 00AC  572          move.b    #172,4227078
080003BA  0040 8006 
                     573   WriteByteEEProm_2:
                     574   ; CR_SR = 0x91;//10010001: Bit 7 START, BIT 4 Write to Slave, BIT 0 Clear Interrupts
080003BE  13FC 0091  575          move.b    #145,4227080
080003C2  0040 8008 
                     576   ; WaitForIICTransmitComplete(); //Check if transmit is complete
080003C6  4E92       577          jsr       (A2)
                     578   ; WaitForACK();
080003C8  4E93       579          jsr       (A3)
                     580   ; //Write Two Bytes for Internal Address
                     581   ; //printf("\r\nWriting high byte internal address.....");
                     582   ; TXR_RXR = upper_addr; // Write High Byte Internal Address to TX register
080003CA  202E 000C  583          move.l    12(A6),D0
080003CE  13C0 0040  584          move.b    D0,4227078
080003D2  8006      
                     585   ; CR_SR = 0x11;
080003D4  13FC 0011  586          move.b    #17,4227080
080003D8  0040 8008 
                     587   ; WaitForIICTransmitComplete(); //Check if transmit is complete
080003DC  4E92       588          jsr       (A2)
                     589   ; WaitForACK();
080003DE  4E93       590          jsr       (A3)
                     591   ; //printf("\r\nWriting low byte internal address.....");
                     592   ; TXR_RXR = lower_addr; // Write Low Byte Internal Address to TX register
080003E0  202E 0010  593          move.l    16(A6),D0
080003E4  13C0 0040  594          move.b    D0,4227078
080003E8  8006      
                     595   ; CR_SR = 0x11;
080003EA  13FC 0011  596          move.b    #17,4227080
080003EE  0040 8008 
                     597   ; WaitForIICTransmitComplete(); //Check if transmit is complete
080003F2  4E92       598          jsr       (A2)
                     599   ; WaitForACK();
080003F4  4E93       600          jsr       (A3)
                     601   ; //Write Data Byte, Enable Stop Condition
                     602   ; //printf("\r\nWriting data byte....");
                     603   ; while (count>0){
                     604   WriteByteEEProm_3:
080003F6  202E 0014  605          move.l    20(A6),D0
080003FA  0C80 0000  606          cmp.l     #0,D0
080003FE  0000      
08000400  6F20       607          ble.s     WriteByteEEProm_5
                     608   ; TXR_RXR = byte; // Write Low Byte Internal Address to TX register
08000402  202E 0008  609          move.l    8(A6),D0
08000406  13C0 0040  610          move.b    D0,4227078
0800040A  8006      
                     611   ; CR_SR = 0x11; //10000001: BIT 6 Stop, BIT 0 IACk
0800040C  13FC 0011  612          move.b    #17,4227080
08000410  0040 8008 
                     613   ; WaitForIICTransmitComplete(); //Check if transmit is complete
08000414  4E92       614          jsr       (A2)
                     615   ; WaitForACK();
08000416  4E93       616          jsr       (A3)
                     617   ; count--;
08000418  53AE 0014  618          subq.l    #1,20(A6)
                     619   ; byte++;
0800041C  52AE 0008  620          addq.l    #1,8(A6)
08000420  60D4       621          bra       WriteByteEEProm_3
                     622   WriteByteEEProm_5:
                     623   ; }
                     624   ; CR_SR = 0x40; //STOP
08000422  13FC 0040  625          move.b    #64,4227080
08000426  0040 8008 
                     626   ; WaitForIICTransmitComplete(); //Check if transmit is complete
0800042A  4E92       627          jsr       (A2)
0800042C  4CDF 0C00  628          movem.l   (A7)+,A2/A3
08000430  4E5E       629          unlk      A6
08000432  4E75       630          rts
                     631   ; //Process Complete
                     632   ; //printf("\r\nByte written to TX register: %x", byte);
                     633   ; }
                     634   ; //Write 128 bytes starting at any address
                     635   ; int* PageWriteEEProm(int upper_addr, int lower_addr, int block_num){
                     636   _PageWriteEEProm:
08000434  4E56 FFF8  637          link      A6,#-8
08000438  48E7 3F38  638          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4,-(A7)
0800043C  242E 000C  639          move.l    12(A6),D2
08000440  2A2E 0008  640          move.l    8(A6),D5
08000444  45F9 0800  641          lea       _printf.L,A2
08000448  0F3A      
0800044A  47EE FFF8  642          lea       -8(A6),A3
0800044E  2C2E 0010  643          move.l    16(A6),D6
08000452  49F9 0800  644          lea       _WriteByteEEProm.L,A4
08000456  038C      
                     645   ; int remainingbytes = 0;
08000458  4283       646          clr.l     D3
                     647   ; int count = 0; //How much we can fill in the page initially
0800045A  4284       648          clr.l     D4
                     649   ; int flag = 0;
0800045C  7E00       650          moveq     #0,D7
                     651   ; int arr[2];
                     652   ; if (lower_addr>=0x00 && lower_addr<=0x7F){
0800045E  0C82 0000  653          cmp.l     #0,D2
08000462  0000      
08000464  6D00 0038  654          blt       PageWriteEEProm_1
08000468  0C82 0000  655          cmp.l     #127,D2
0800046C  007F      
0800046E  6E00 002E  656          bgt       PageWriteEEProm_1
                     657   ; count = 0x7F - lower_addr + 1;
08000472  707F       658          moveq     #127,D0
08000474  4880       659          ext.w     D0
08000476  48C0       660          ext.l     D0
08000478  9082       661          sub.l     D2,D0
0800047A  5280       662          addq.l    #1,D0
0800047C  2800       663          move.l    D0,D4
                     664   ; remainingbytes = lower_addr - 0x00;
0800047E  2002       665          move.l    D2,D0
08000480  2600       666          move.l    D0,D3
                     667   ; printf("\r\nLower address count: %d", count);
08000482  2F04       668          move.l    D4,-(A7)
08000484  4879 0800  669          pea       @lab3_p~1_2.L
08000488  1874      
0800048A  4E92       670          jsr       (A2)
0800048C  504F       671          addq.w    #8,A7
                     672   ; printf("\r\nRemaining bytes for Lower address: %d", remainingbytes);
0800048E  2F03       673          move.l    D3,-(A7)
08000490  4879 0800  674          pea       @lab3_p~1_3.L
08000494  188E      
08000496  4E92       675          jsr       (A2)
08000498  504F       676          addq.w    #8,A7
0800049A  6000 0032  677          bra       PageWriteEEProm_2
                     678   PageWriteEEProm_1:
                     679   ; //flag = 0;
                     680   ; }
                     681   ; else{ // Implies that lower_addr is in range 0x80-0xFF
                     682   ; count = 0xFF - lower_addr + 1;
0800049E  303C 00FF  683          move.w    #255,D0
080004A2  48C0       684          ext.l     D0
080004A4  9082       685          sub.l     D2,D0
080004A6  5280       686          addq.l    #1,D0
080004A8  2800       687          move.l    D0,D4
                     688   ; remainingbytes = lower_addr - 0x80;
080004AA  2002       689          move.l    D2,D0
080004AC  0480 0000  690          sub.l     #128,D0
080004B0  0080      
080004B2  2600       691          move.l    D0,D3
                     692   ; flag = 1;
080004B4  7E01       693          moveq     #1,D7
                     694   ; printf("\r\nUpper address count: %d", count);
080004B6  2F04       695          move.l    D4,-(A7)
080004B8  4879 0800  696          pea       @lab3_p~1_4.L
080004BC  18B6      
080004BE  4E92       697          jsr       (A2)
080004C0  504F       698          addq.w    #8,A7
                     699   ; printf("\r\nRemaining bytes for Upper address: %d", remainingbytes);
080004C2  2F03       700          move.l    D3,-(A7)
080004C4  4879 0800  701          pea       @lab3_p~1_5.L
080004C8  18D0      
080004CA  4E92       702          jsr       (A2)
080004CC  504F       703          addq.w    #8,A7
                     704   PageWriteEEProm_2:
                     705   ; }
                     706   ; WriteByteEEProm(0x00, upper_addr, lower_addr, count, block_num);
080004CE  2F06       707          move.l    D6,-(A7)
080004D0  2F04       708          move.l    D4,-(A7)
080004D2  2F02       709          move.l    D2,-(A7)
080004D4  2F05       710          move.l    D5,-(A7)
080004D6  42A7       711          clr.l     -(A7)
080004D8  4E94       712          jsr       (A4)
080004DA  DEFC 0014  713          add.w     #20,A7
                     714   ; if (flag == 1){
080004DE  0C87 0000  715          cmp.l     #1,D7
080004E2  0001      
080004E4  661E       716          bne.s     PageWriteEEProm_3
                     717   ; lower_addr = 0x00;
080004E6  4282       718          clr.l     D2
                     719   ; upper_addr++;
080004E8  5285       720          addq.l    #1,D5
                     721   ; if (remainingbytes >0){
080004EA  0C83 0000  722          cmp.l     #0,D3
080004EE  0000      
080004F0  6F10       723          ble.s     PageWriteEEProm_5
                     724   ; //printf("\r\nShould be upper, remaining bytes is %x", remainingbytes);
                     725   ; WriteByteEEProm(0x00, upper_addr, lower_addr, remainingbytes, block_num);
080004F2  2F06       726          move.l    D6,-(A7)
080004F4  2F03       727          move.l    D3,-(A7)
080004F6  2F02       728          move.l    D2,-(A7)
080004F8  2F05       729          move.l    D5,-(A7)
080004FA  42A7       730          clr.l     -(A7)
080004FC  4E94       731          jsr       (A4)
080004FE  DEFC 0014  732          add.w     #20,A7
                     733   PageWriteEEProm_5:
08000502  601E       734          bra.s     PageWriteEEProm_7
                     735   PageWriteEEProm_3:
                     736   ; }
                     737   ; }
                     738   ; else{
                     739   ; lower_addr = 0x80;
08000504  243C 0000  740          move.l    #128,D2
08000508  0080      
                     741   ; if (remainingbytes >0){
0800050A  0C83 0000  742          cmp.l     #0,D3
0800050E  0000      
08000510  6F10       743          ble.s     PageWriteEEProm_7
                     744   ; //printf("\r\nShould be lower, remaining bytes is %x", remainingbytes);
                     745   ; WriteByteEEProm(0x00, upper_addr, lower_addr, remainingbytes, block_num);
08000512  2F06       746          move.l    D6,-(A7)
08000514  2F03       747          move.l    D3,-(A7)
08000516  2F02       748          move.l    D2,-(A7)
08000518  2F05       749          move.l    D5,-(A7)
0800051A  42A7       750          clr.l     -(A7)
0800051C  4E94       751          jsr       (A4)
0800051E  DEFC 0014  752          add.w     #20,A7
                     753   PageWriteEEProm_7:
                     754   ; }
                     755   ; }
                     756   ; lower_addr = lower_addr + remainingbytes;
08000522  D483       757          add.l     D3,D2
                     758   ; arr[0] = lower_addr;
08000524  2682       759          move.l    D2,(A3)
                     760   ; arr[1] = upper_addr;
08000526  2745 0004  761          move.l    D5,4(A3)
                     762   ; return arr;
0800052A  200B       763          move.l    A3,D0
0800052C  4CDF 1CFC  764          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4
08000530  4E5E       765          unlk      A6
08000532  4E75       766          rts
                     767   ; }
                     768   ; //Read a page
                     769   ; void PageReadEEProm(int upper_addr, int lower_addr, int block_num){
                     770   _PageReadEEProm:
08000534  4E56 0000  771          link      A6,#0
                     772   ; //int count = 0; //How much we can fill in the page initially
                     773   ; /*
                     774   ; if (lower_addr>=0x00 && lower_addr<=0x7F){
                     775   ; count = 0x7F - lower_addr + 1;
                     776   ; }
                     777   ; else{ // Implies that lower_addr is in range 0x7F-0xFF
                     778   ; count = 0xFF - lower_addr + 1;
                     779   ; }*/
                     780   ; ReadByteEEProm(upper_addr, lower_addr, 128, block_num);
08000538  2F2E 0010  781          move.l    16(A6),-(A7)
0800053C  4878 0080  782          pea       128
08000540  2F2E 000C  783          move.l    12(A6),-(A7)
08000544  2F2E 0008  784          move.l    8(A6),-(A7)
08000548  4EB9 0800  785          jsr       _ReadByteEEProm
0800054C  027E      
0800054E  DEFC 0010  786          add.w     #16,A7
08000552  4E5E       787          unlk      A6
08000554  4E75       788          rts
                     789   ; }
                     790   ; //Write block of up to 128k Bytes starting at any address
                     791   ; void Write128kEEProm(int upper_start_addr, int lower_start_addr, int block_to_write, int write_num){
                     792   _Write128kEEProm:
08000556  4E56 FFF4  793          link      A6,#-12
0800055A  48E7 3F3C  794          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
0800055E  242E 000C  795          move.l    12(A6),D2
08000562  262E 0010  796          move.l    16(A6),D3
08000566  282E 0008  797          move.l    8(A6),D4
0800056A  45F9 0800  798          lea       _printf.L,A2
0800056E  0F3A      
08000570  47F9 0800  799          lea       _WriteByteEEProm.L,A3
08000574  038C      
                     800   ; int pagewritenumber;
                     801   ; int indiwritenumber;
                     802   ; int initialPageFill;
                     803   ; int i;
                     804   ; int count;
                     805   ; int remainingbytes;
                     806   ; int *temp;
                     807   ; int flag = 0;
08000576  42AE FFFC  808          clr.l     -4(A6)
                     809   ; if (lower_start_addr>=0x00 && lower_start_addr<=0x7F){
0800057A  0C82 0000  810          cmp.l     #0,D2
0800057E  0000      
08000580  6D22       811          blt.s     Write128kEEProm_1
08000582  0C82 0000  812          cmp.l     #127,D2
08000586  007F      
08000588  6E1A       813          bgt.s     Write128kEEProm_1
                     814   ; initialPageFill = 0x7F - lower_start_addr + 1;
0800058A  707F       815          moveq     #127,D0
0800058C  4880       816          ext.w     D0
0800058E  48C0       817          ext.l     D0
08000590  9082       818          sub.l     D2,D0
08000592  5280       819          addq.l    #1,D0
08000594  2E00       820          move.l    D0,D7
                     821   ; printf("\r\nLower address initial page fill: %d", initialPageFill);
08000596  2F07       822          move.l    D7,-(A7)
08000598  4879 0800  823          pea       @lab3_p~1_6.L
0800059C  18F8      
0800059E  4E92       824          jsr       (A2)
080005A0  504F       825          addq.w    #8,A7
080005A2  6020       826          bra.s     Write128kEEProm_2
                     827   Write128kEEProm_1:
                     828   ; }
                     829   ; else{ // Implies that lower_addr is in range 0x80-0xFF
                     830   ; initialPageFill = 0xFF - lower_start_addr + 1;
080005A4  303C 00FF  831          move.w    #255,D0
080005A8  48C0       832          ext.l     D0
080005AA  9082       833          sub.l     D2,D0
080005AC  5280       834          addq.l    #1,D0
080005AE  2E00       835          move.l    D0,D7
                     836   ; printf("\r\nUpper address initial page fill: %d", initialPageFill);
080005B0  2F07       837          move.l    D7,-(A7)
080005B2  4879 0800  838          pea       @lab3_p~1_7.L
080005B6  191E      
080005B8  4E92       839          jsr       (A2)
080005BA  504F       840          addq.w    #8,A7
                     841   ; flag = 1;
080005BC  2D7C 0000  842          move.l    #1,-4(A6)
080005C0  0001 FFFC 
                     843   Write128kEEProm_2:
                     844   ; }
                     845   ; if(initialPageFill >= write_num) {
080005C4  BEAE 0014  846          cmp.l     20(A6),D7
080005C8  6D1C       847          blt.s     Write128kEEProm_3
                     848   ; pagewritenumber = 0;
080005CA  3A7C 0000  849          move.w    #0,A5
                     850   ; indiwritenumber = 0;
080005CE  4285       851          clr.l     D5
                     852   ; WriteByteEEProm(0x00, upper_start_addr, lower_start_addr, write_num, block_to_write);
080005D0  2F03       853          move.l    D3,-(A7)
080005D2  2F2E 0014  854          move.l    20(A6),-(A7)
080005D6  2F02       855          move.l    D2,-(A7)
080005D8  2F04       856          move.l    D4,-(A7)
080005DA  42A7       857          clr.l     -(A7)
080005DC  4E93       858          jsr       (A3)
080005DE  DEFC 0014  859          add.w     #20,A7
080005E2  6000 0044  860          bra       Write128kEEProm_4
                     861   Write128kEEProm_3:
                     862   ; } else {
                     863   ; pagewritenumber = (write_num-initialPageFill)/128;
080005E6  202E 0014  864          move.l    20(A6),D0
080005EA  9087       865          sub.l     D7,D0
080005EC  2F00       866          move.l    D0,-(A7)
080005EE  4878 0080  867          pea       128
080005F2  4EB9 0800  868          jsr       LDIV
080005F6  0DCE      
080005F8  2017       869          move.l    (A7),D0
080005FA  504F       870          addq.w    #8,A7
080005FC  2A40       871          move.l    D0,A5
                     872   ; indiwritenumber = (write_num-initialPageFill)%128;
080005FE  202E 0014  873          move.l    20(A6),D0
08000602  9087       874          sub.l     D7,D0
08000604  2F00       875          move.l    D0,-(A7)
08000606  4878 0080  876          pea       128
0800060A  4EB9 0800  877          jsr       LDIV
0800060E  0DCE      
08000610  202F 0004  878          move.l    4(A7),D0
08000614  504F       879          addq.w    #8,A7
08000616  2A00       880          move.l    D0,D5
                     881   ; WriteByteEEProm(0x00, upper_start_addr, lower_start_addr, initialPageFill, block_to_write);
08000618  2F03       882          move.l    D3,-(A7)
0800061A  2F07       883          move.l    D7,-(A7)
0800061C  2F02       884          move.l    D2,-(A7)
0800061E  2F04       885          move.l    D4,-(A7)
08000620  42A7       886          clr.l     -(A7)
08000622  4E93       887          jsr       (A3)
08000624  DEFC 0014  888          add.w     #20,A7
                     889   Write128kEEProm_4:
                     890   ; }
                     891   ; printf("\r\nPage writes: %d", pagewritenumber);
08000628  2F0D       892          move.l    A5,-(A7)
0800062A  4879 0800  893          pea       @lab3_p~1_8.L
0800062E  1944      
08000630  4E92       894          jsr       (A2)
08000632  504F       895          addq.w    #8,A7
                     896   ; printf("\r\nIndividual writes: %d", indiwritenumber);
08000634  2F05       897          move.l    D5,-(A7)
08000636  4879 0800  898          pea       @lab3_p~1_9.L
0800063A  1956      
0800063C  4E92       899          jsr       (A2)
0800063E  504F       900          addq.w    #8,A7
                     901   ; if (pagewritenumber >0 || indiwritenumber>0){
08000640  200D       902          move.l    A5,D0
08000642  0C80 0000  903          cmp.l     #0,D0
08000646  0000      
08000648  6E0A       904          bgt.s     Write128kEEProm_7
0800064A  0C85 0000  905          cmp.l     #0,D5
0800064E  0000      
08000650  6F00 0038  906          ble       Write128kEEProm_9
                     907   Write128kEEProm_7:
                     908   ; if (flag == 1){
08000654  202E FFFC  909          move.l    -4(A6),D0
08000658  0C80 0000  910          cmp.l     #1,D0
0800065C  0001      
0800065E  6624       911          bne.s     Write128kEEProm_8
                     912   ; if(upper_start_addr == 0xFF && lower_start_addr>= 0x80){
08000660  0C84 0000  913          cmp.l     #255,D4
08000664  00FF      
08000666  6616       914          bne.s     Write128kEEProm_10
08000668  0C82 0000  915          cmp.l     #128,D2
0800066C  0080      
0800066E  6D0E       916          blt.s     Write128kEEProm_10
                     917   ; if (block_to_write ==0){
08000670  4A83       918          tst.l     D3
08000672  6604       919          bne.s     Write128kEEProm_12
                     920   ; block_to_write = 1;
08000674  7601       921          moveq     #1,D3
08000676  6002       922          bra.s     Write128kEEProm_13
                     923   Write128kEEProm_12:
                     924   ; }
                     925   ; else{
                     926   ; block_to_write = 0;
08000678  4283       927          clr.l     D3
                     928   Write128kEEProm_13:
                     929   ; }
                     930   ; upper_start_addr = 0x00;
0800067A  4284       931          clr.l     D4
0800067C  6002       932          bra.s     Write128kEEProm_11
                     933   Write128kEEProm_10:
                     934   ; }
                     935   ; else{
                     936   ; upper_start_addr++;
0800067E  5284       937          addq.l    #1,D4
                     938   Write128kEEProm_11:
                     939   ; }
                     940   ; lower_start_addr = 0x00;
08000680  4282       941          clr.l     D2
08000682  6006       942          bra.s     Write128kEEProm_9
                     943   Write128kEEProm_8:
                     944   ; }
                     945   ; else{
                     946   ; lower_start_addr = 0x80;
08000684  243C 0000  947          move.l    #128,D2
08000688  0080      
                     948   Write128kEEProm_9:
                     949   ; }
                     950   ; }
                     951   ; for (i = 0; i <pagewritenumber; i++){
0800068A  42AE FFF4  952          clr.l     -12(A6)
                     953   Write128kEEProm_14:
0800068E  200D       954          move.l    A5,D0
08000690  B0AE FFF4  955          cmp.l     -12(A6),D0
08000694  6F00 00D8  956          ble       Write128kEEProm_16
                     957   ; if (upper_start_addr == 0xFF && lower_start_addr > 0x80){
08000698  0C84 0000  958          cmp.l     #255,D4
0800069C  00FF      
0800069E  6600 0066  959          bne       Write128kEEProm_17
080006A2  0C82 0000  960          cmp.l     #128,D2
080006A6  0080      
080006A8  6F00 005C  961          ble       Write128kEEProm_17
                     962   ; //Calculate how much to put in this block and the new block
                     963   ; printf("\r\nFILLS UP REMAINDER OF BLOCK %d, THEN SWITCHES BLOCK", block_to_write);
080006AC  2F03       964          move.l    D3,-(A7)
080006AE  4879 0800  965          pea       @lab3_p~1_10.L
080006B2  196E      
080006B4  4E92       966          jsr       (A2)
080006B6  504F       967          addq.w    #8,A7
                     968   ; count = 0xFF - lower_start_addr + 1;
080006B8  303C 00FF  969          move.w    #255,D0
080006BC  48C0       970          ext.l     D0
080006BE  9082       971          sub.l     D2,D0
080006C0  5280       972          addq.l    #1,D0
080006C2  2C00       973          move.l    D0,D6
                     974   ; remainingbytes = lower_start_addr - 0x80;
080006C4  2002       975          move.l    D2,D0
080006C6  0480 0000  976          sub.l     #128,D0
080006CA  0080      
080006CC  2840       977          move.l    D0,A4
                     978   ; WriteByteEEProm(0x80, upper_start_addr, lower_start_addr, count, block_to_write);
080006CE  2F03       979          move.l    D3,-(A7)
080006D0  2F06       980          move.l    D6,-(A7)
080006D2  2F02       981          move.l    D2,-(A7)
080006D4  2F04       982          move.l    D4,-(A7)
080006D6  4878 0080  983          pea       128
080006DA  4E93       984          jsr       (A3)
080006DC  DEFC 0014  985          add.w     #20,A7
                     986   ; if (block_to_write ==0){
080006E0  4A83       987          tst.l     D3
080006E2  6604       988          bne.s     Write128kEEProm_19
                     989   ; block_to_write = 1;
080006E4  7601       990          moveq     #1,D3
080006E6  6002       991          bra.s     Write128kEEProm_20
                     992   Write128kEEProm_19:
                     993   ; }
                     994   ; else{
                     995   ; block_to_write = 0;
080006E8  4283       996          clr.l     D3
                     997   Write128kEEProm_20:
                     998   ; }
                     999   ; upper_start_addr = 0x00;
080006EA  4284      1000          clr.l     D4
                    1001   ; lower_start_addr = 0x00;
080006EC  4282      1002          clr.l     D2
                    1003   ; WriteByteEEProm(0x25, upper_start_addr, lower_start_addr, remainingbytes, block_to_write);
080006EE  2F03      1004          move.l    D3,-(A7)
080006F0  2F0C      1005          move.l    A4,-(A7)
080006F2  2F02      1006          move.l    D2,-(A7)
080006F4  2F04      1007          move.l    D4,-(A7)
080006F6  4878 0025 1008          pea       37
080006FA  4E93      1009          jsr       (A3)
080006FC  DEFC 0014 1010          add.w     #20,A7
                    1011   ; lower_start_addr = lower_start_addr + remainingbytes;
08000700  D48C      1012          add.l     A4,D2
08000702  6000 0040 1013          bra       Write128kEEProm_24
                    1014   Write128kEEProm_17:
                    1015   ; }
                    1016   ; else if (upper_start_addr == 0xFF && lower_start_addr == 0x80){
08000706  0C84 0000 1017          cmp.l     #255,D4
0800070A  00FF      
0800070C  6600 0036 1018          bne       Write128kEEProm_24
08000710  0C82 0000 1019          cmp.l     #128,D2
08000714  0080      
08000716  6600 002C 1020          bne       Write128kEEProm_24
                    1021   ; printf("\r\nFILLS UP BLOCK %d, THEN SWITCHES BLOCK", block_to_write);
0800071A  2F03      1022          move.l    D3,-(A7)
0800071C  4879 0800 1023          pea       @lab3_p~1_11.L
08000720  19A4      
08000722  4E92      1024          jsr       (A2)
08000724  504F      1025          addq.w    #8,A7
                    1026   ; PageWriteEEProm(upper_start_addr,lower_start_addr,block_to_write);
08000726  2F03      1027          move.l    D3,-(A7)
08000728  2F02      1028          move.l    D2,-(A7)
0800072A  2F04      1029          move.l    D4,-(A7)
0800072C  4EB9 0800 1030          jsr       _PageWriteEEProm
08000730  0434      
08000732  DEFC 000C 1031          add.w     #12,A7
                    1032   ; upper_start_addr = 0x00;
08000736  4284      1033          clr.l     D4
                    1034   ; lower_start_addr = 0x00;
08000738  4282      1035          clr.l     D2
                    1036   ; if (block_to_write ==0){
0800073A  4A83      1037          tst.l     D3
0800073C  6604      1038          bne.s     Write128kEEProm_23
                    1039   ; block_to_write = 1;
0800073E  7601      1040          moveq     #1,D3
08000740  6002      1041          bra.s     Write128kEEProm_24
                    1042   Write128kEEProm_23:
                    1043   ; }
                    1044   ; else{
                    1045   ; block_to_write = 0;
08000742  4283      1046          clr.l     D3
                    1047   Write128kEEProm_24:
                    1048   ; }
                    1049   ; }
                    1050   ; temp = PageWriteEEProm(upper_start_addr,lower_start_addr,block_to_write);
08000744  2F03      1051          move.l    D3,-(A7)
08000746  2F02      1052          move.l    D2,-(A7)
08000748  2F04      1053          move.l    D4,-(A7)
0800074A  4EB9 0800 1054          jsr       _PageWriteEEProm
0800074E  0434      
08000750  DEFC 000C 1055          add.w     #12,A7
08000754  2D40 FFF8 1056          move.l    D0,-8(A6)
                    1057   ; upper_start_addr = temp[1];
08000758  206E FFF8 1058          move.l    -8(A6),A0
0800075C  2828 0004 1059          move.l    4(A0),D4
                    1060   ; lower_start_addr = temp[0];
08000760  206E FFF8 1061          move.l    -8(A6),A0
08000764  2410      1062          move.l    (A0),D2
08000766  52AE FFF4 1063          addq.l    #1,-12(A6)
0800076A  6000 FF22 1064          bra       Write128kEEProm_14
                    1065   Write128kEEProm_16:
                    1066   ; }
                    1067   ; if (indiwritenumber>0){
0800076E  0C85 0000 1068          cmp.l     #0,D5
08000772  0000      
08000774  6F00 00A8 1069          ble       Write128kEEProm_30
                    1070   ; if (lower_start_addr>=0x00 && lower_start_addr<=0x7F){
08000778  0C82 0000 1071          cmp.l     #0,D2
0800077C  0000      
0800077E  6D16      1072          blt.s     Write128kEEProm_27
08000780  0C82 0000 1073          cmp.l     #127,D2
08000784  007F      
08000786  6E0E      1074          bgt.s     Write128kEEProm_27
                    1075   ; count = 0x7F - lower_start_addr + 1;
08000788  707F      1076          moveq     #127,D0
0800078A  4880      1077          ext.w     D0
0800078C  48C0      1078          ext.l     D0
0800078E  9082      1079          sub.l     D2,D0
08000790  5280      1080          addq.l    #1,D0
08000792  2C00      1081          move.l    D0,D6
08000794  6014      1082          bra.s     Write128kEEProm_28
                    1083   Write128kEEProm_27:
                    1084   ; }
                    1085   ; else{ // Implies that lower_addr is in range 0x80-0xFF
                    1086   ; count = 0xFF - lower_start_addr + 1;
08000796  303C 00FF 1087          move.w    #255,D0
0800079A  48C0      1088          ext.l     D0
0800079C  9082      1089          sub.l     D2,D0
0800079E  5280      1090          addq.l    #1,D0
080007A0  2C00      1091          move.l    D0,D6
                    1092   ; flag = 1;
080007A2  2D7C 0000 1093          move.l    #1,-4(A6)
080007A6  0001 FFFC 
                    1094   Write128kEEProm_28:
                    1095   ; }
                    1096   ; remainingbytes = indiwritenumber - count;
080007AA  2005      1097          move.l    D5,D0
080007AC  9086      1098          sub.l     D6,D0
080007AE  2840      1099          move.l    D0,A4
                    1100   ; printf("\r\nIndiwritenumber: %d", indiwritenumber);
080007B0  2F05      1101          move.l    D5,-(A7)
080007B2  4879 0800 1102          pea       @lab3_p~1_12.L
080007B6  19CE      
080007B8  4E92      1103          jsr       (A2)
080007BA  504F      1104          addq.w    #8,A7
                    1105   ; printf("\r\nCount: %d", count);
080007BC  2F06      1106          move.l    D6,-(A7)
080007BE  4879 0800 1107          pea       @lab3_p~1_13.L
080007C2  19E4      
080007C4  4E92      1108          jsr       (A2)
080007C6  504F      1109          addq.w    #8,A7
                    1110   ; printf("\r\nRemaining bytes: %d", remainingbytes);
080007C8  2F0C      1111          move.l    A4,-(A7)
080007CA  4879 0800 1112          pea       @lab3_p~1_14.L
080007CE  19F0      
080007D0  4E92      1113          jsr       (A2)
080007D2  504F      1114          addq.w    #8,A7
                    1115   ; printf("\r\nLower address: %x",lower_start_addr);
080007D4  2F02      1116          move.l    D2,-(A7)
080007D6  4879 0800 1117          pea       @lab3_p~1_15.L
080007DA  1A06      
080007DC  4E92      1118          jsr       (A2)
080007DE  504F      1119          addq.w    #8,A7
                    1120   ; if (count>=indiwritenumber){
080007E0  BC85      1121          cmp.l     D5,D6
080007E2  6D1E      1122          blt.s     Write128kEEProm_29
                    1123   ; printf("\r\nFill rest of the write in the page");
080007E4  4879 0800 1124          pea       @lab3_p~1_16.L
080007E8  1A1A      
080007EA  4E92      1125          jsr       (A2)
080007EC  584F      1126          addq.w    #4,A7
                    1127   ; WriteByteEEProm(0xA0, upper_start_addr, lower_start_addr,indiwritenumber, block_to_write);
080007EE  2F03      1128          move.l    D3,-(A7)
080007F0  2F05      1129          move.l    D5,-(A7)
080007F2  2F02      1130          move.l    D2,-(A7)
080007F4  2F04      1131          move.l    D4,-(A7)
080007F6  4878 00A0 1132          pea       160
080007FA  4E93      1133          jsr       (A3)
080007FC  DEFC 0014 1134          add.w     #20,A7
08000800  601C      1135          bra.s     Write128kEEProm_30
                    1136   Write128kEEProm_29:
                    1137   ; }
                    1138   ; else{
                    1139   ; printf("\r\nFill rest of the write in the page and the rest in the remaining in next page");
08000802  4879 0800 1140          pea       @lab3_p~1_17.L
08000806  1A40      
08000808  4E92      1141          jsr       (A2)
0800080A  584F      1142          addq.w    #4,A7
                    1143   ; WriteByteEEProm(0xF2, upper_start_addr, lower_start_addr,count, block_to_write);
0800080C  2F03      1144          move.l    D3,-(A7)
0800080E  2F06      1145          move.l    D6,-(A7)
08000810  2F02      1146          move.l    D2,-(A7)
08000812  2F04      1147          move.l    D4,-(A7)
08000814  4878 00F2 1148          pea       242
08000818  4E93      1149          jsr       (A3)
0800081A  DEFC 0014 1150          add.w     #20,A7
                    1151   Write128kEEProm_30:
0800081E  4CDF 3CFC 1152          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08000822  4E5E      1153          unlk      A6
08000824  4E75      1154          rts
                    1155   ; }
                    1156   ; }
                    1157   ; //FYI: For individual writes, check if we need a new page/or new block
                    1158   ; }
                    1159   ; //Read block of up to 128k Bytes starting at Any address
                    1160   ; void Read128kEEProm(int upper_start_addr, int lower_start_addr, int block_to_read, int read_num){
                    1161   _Read128kEEProm:
08000826  4E56 FFF8 1162          link      A6,#-8
0800082A  48E7 3E30 1163          movem.l   D2/D3/D4/D5/D6/A2/A3,-(A7)
0800082E  242E 0010 1164          move.l    16(A6),D2
08000832  282E 0014 1165          move.l    20(A6),D4
08000836  2A2E 000C 1166          move.l    12(A6),D5
0800083A  2C2E 0008 1167          move.l    8(A6),D6
0800083E  45F9 0800 1168          lea       _ReadByteEEProm.L,A2
08000842  027E      
08000844  47F9 0800 1169          lea       _printf.L,A3
08000848  0F3A      
                    1170   ; //ReadByteEEProm(upper_start_addr, lower_start_addr, read_num, block_to_read);
                    1171   ; int iterations, new_start, new_stop;
                    1172   ; new_start = 0xFF-upper_start_addr;
0800084A  303C 00FF 1173          move.w    #255,D0
0800084E  48C0      1174          ext.l     D0
08000850  9086      1175          sub.l     D6,D0
08000852  2D40 FFF8 1176          move.l    D0,-8(A6)
                    1177   ; new_stop = 0xFF-lower_start_addr;
08000856  303C 00FF 1178          move.w    #255,D0
0800085A  48C0      1179          ext.l     D0
0800085C  9085      1180          sub.l     D5,D0
0800085E  2D40 FFFC 1181          move.l    D0,-4(A6)
                    1182   ; iterations = new_start*16*16+new_stop+1;
08000862  2F2E FFF8 1183          move.l    -8(A6),-(A7)
08000866  4878 0010 1184          pea       16
0800086A  4EB9 0800 1185          jsr       LMUL
0800086E  0EAC      
08000870  2017      1186          move.l    (A7),D0
08000872  504F      1187          addq.w    #8,A7
08000874  2F00      1188          move.l    D0,-(A7)
08000876  4878 0010 1189          pea       16
0800087A  4EB9 0800 1190          jsr       LMUL
0800087E  0EAC      
08000880  2017      1191          move.l    (A7),D0
08000882  504F      1192          addq.w    #8,A7
08000884  D0AE FFFC 1193          add.l     -4(A6),D0
08000888  5280      1194          addq.l    #1,D0
0800088A  2600      1195          move.l    D0,D3
                    1196   ; printf("\r\nInitial Iterations: %d", iterations);
0800088C  2F03      1197          move.l    D3,-(A7)
0800088E  4879 0800 1198          pea       @lab3_p~1_18.L
08000892  1A90      
08000894  4E93      1199          jsr       (A3)
08000896  504F      1200          addq.w    #8,A7
                    1201   ; printf("\r\nInitial ReadNum: %d", read_num);
08000898  2F04      1202          move.l    D4,-(A7)
0800089A  4879 0800 1203          pea       @lab3_p~1_19.L
0800089E  1AAA      
080008A0  4E93      1204          jsr       (A3)
080008A2  504F      1205          addq.w    #8,A7
                    1206   ; if (read_num<=iterations){
080008A4  B883      1207          cmp.l     D3,D4
080008A6  6E12      1208          bgt.s     Read128kEEProm_1
                    1209   ; ReadByteEEProm(upper_start_addr, lower_start_addr, read_num, block_to_read);
080008A8  2F02      1210          move.l    D2,-(A7)
080008AA  2F04      1211          move.l    D4,-(A7)
080008AC  2F05      1212          move.l    D5,-(A7)
080008AE  2F06      1213          move.l    D6,-(A7)
080008B0  4E92      1214          jsr       (A2)
080008B2  DEFC 0010 1215          add.w     #16,A7
080008B6  6000 0080 1216          bra       Read128kEEProm_6
                    1217   Read128kEEProm_1:
                    1218   ; }
                    1219   ; else{
                    1220   ; read_num = read_num - iterations;
080008BA  9883      1221          sub.l     D3,D4
                    1222   ; ReadByteEEProm(upper_start_addr, lower_start_addr, iterations, block_to_read);
080008BC  2F02      1223          move.l    D2,-(A7)
080008BE  2F03      1224          move.l    D3,-(A7)
080008C0  2F05      1225          move.l    D5,-(A7)
080008C2  2F06      1226          move.l    D6,-(A7)
080008C4  4E92      1227          jsr       (A2)
080008C6  DEFC 0010 1228          add.w     #16,A7
                    1229   ; if (block_to_read ==0){
080008CA  4A82      1230          tst.l     D2
080008CC  6604      1231          bne.s     Read128kEEProm_3
                    1232   ; block_to_read = 1;
080008CE  7401      1233          moveq     #1,D2
080008D0  6002      1234          bra.s     Read128kEEProm_4
                    1235   Read128kEEProm_3:
                    1236   ; }
                    1237   ; else{
                    1238   ; block_to_read = 0;
080008D2  4282      1239          clr.l     D2
                    1240   Read128kEEProm_4:
                    1241   ; }
                    1242   ; upper_start_addr = 0x00;
080008D4  4286      1243          clr.l     D6
                    1244   ; lower_start_addr = 0x00;
080008D6  4285      1245          clr.l     D5
                    1246   ; printf("\r\nBLOCK SWITCH: block is now %d",block_to_read);
080008D8  2F02      1247          move.l    D2,-(A7)
080008DA  4879 0800 1248          pea       @lab3_p~1_20.L
080008DE  1AC0      
080008E0  4E93      1249          jsr       (A3)
080008E2  504F      1250          addq.w    #8,A7
                    1251   ; iterations = 0xFF*16*16+0xFF + 1;
080008E4  263C 0001 1252          move.l    #65536,D3
080008E8  0000      
                    1253   ; if(read_num<=iterations){
080008EA  B883      1254          cmp.l     D3,D4
080008EC  6E12      1255          bgt.s     Read128kEEProm_5
                    1256   ; ReadByteEEProm(upper_start_addr, lower_start_addr, read_num, block_to_read);
080008EE  2F02      1257          move.l    D2,-(A7)
080008F0  2F04      1258          move.l    D4,-(A7)
080008F2  2F05      1259          move.l    D5,-(A7)
080008F4  2F06      1260          move.l    D6,-(A7)
080008F6  4E92      1261          jsr       (A2)
080008F8  DEFC 0010 1262          add.w     #16,A7
080008FC  6000 003A 1263          bra       Read128kEEProm_6
                    1264   Read128kEEProm_5:
                    1265   ; }
                    1266   ; else{
                    1267   ; read_num = read_num - iterations;
08000900  9883      1268          sub.l     D3,D4
                    1269   ; ReadByteEEProm(upper_start_addr, lower_start_addr, iterations, block_to_read);
08000902  2F02      1270          move.l    D2,-(A7)
08000904  2F03      1271          move.l    D3,-(A7)
08000906  2F05      1272          move.l    D5,-(A7)
08000908  2F06      1273          move.l    D6,-(A7)
0800090A  4E92      1274          jsr       (A2)
0800090C  DEFC 0010 1275          add.w     #16,A7
                    1276   ; if (block_to_read ==0){
08000910  4A82      1277          tst.l     D2
08000912  6604      1278          bne.s     Read128kEEProm_7
                    1279   ; block_to_read = 1;
08000914  7401      1280          moveq     #1,D2
08000916  6002      1281          bra.s     Read128kEEProm_8
                    1282   Read128kEEProm_7:
                    1283   ; }
                    1284   ; else{
                    1285   ; block_to_read = 0;
08000918  4282      1286          clr.l     D2
                    1287   Read128kEEProm_8:
                    1288   ; }
                    1289   ; upper_start_addr = 0x00;
0800091A  4286      1290          clr.l     D6
                    1291   ; lower_start_addr = 0x00;
0800091C  4285      1292          clr.l     D5
                    1293   ; printf("\r\nBLOCK SWITCH: block is now %d",block_to_read);
0800091E  2F02      1294          move.l    D2,-(A7)
08000920  4879 0800 1295          pea       @lab3_p~1_20.L
08000924  1AC0      
08000926  4E93      1296          jsr       (A3)
08000928  504F      1297          addq.w    #8,A7
                    1298   ; ReadByteEEProm(upper_start_addr, lower_start_addr, read_num, block_to_read);
0800092A  2F02      1299          move.l    D2,-(A7)
0800092C  2F04      1300          move.l    D4,-(A7)
0800092E  2F05      1301          move.l    D5,-(A7)
08000930  2F06      1302          move.l    D6,-(A7)
08000932  4E92      1303          jsr       (A2)
08000934  DEFC 0010 1304          add.w     #16,A7
                    1305   Read128kEEProm_6:
08000938  4CDF 0C7C 1306          movem.l   (A7)+,D2/D3/D4/D5/D6/A2/A3
0800093C  4E5E      1307          unlk      A6
0800093E  4E75      1308          rts
                    1309   ; }
                    1310   ; }
                    1311   ; }
                    1312   ; void DAC_function(void){
                    1313   _DAC_function:
08000940  48E7 2030 1314          movem.l   D2/A2/A3,-(A7)
08000944  45F9 0800 1315          lea       _WaitForACK.L,A2
08000948  0256      
0800094A  47F9 0800 1316          lea       _WaitForIICTransmitComplete.L,A3
0800094E  0246      
                    1317   ; int temp = 0x00;
08000950  4282      1318          clr.l     D2
                    1319   ; //printf("\r\nSENDING SLAVE ADDR");
                    1320   ; TXR_RXR = 0x92; //10010010
08000952  13FC 0092 1321          move.b    #146,4227078
08000956  0040 8006 
                    1322   ; CR_SR = 0x91;
0800095A  13FC 0091 1323          move.b    #145,4227080
0800095E  0040 8008 
                    1324   ; WaitForIICTransmitComplete();
08000962  4E93      1325          jsr       (A3)
                    1326   ; WaitForACK();
08000964  4E92      1327          jsr       (A2)
                    1328   ; //printf("\r\nSENDING CONTROL BYTE");
                    1329   ; TXR_RXR = 0x44; //01000100
08000966  13FC 0044 1330          move.b    #68,4227078
0800096A  0040 8006 
                    1331   ; CR_SR = 0x11;
0800096E  13FC 0011 1332          move.b    #17,4227080
08000972  0040 8008 
                    1333   ; WaitForIICTransmitComplete();
08000976  4E93      1334          jsr       (A3)
                    1335   ; WaitForACK();
08000978  4E92      1336          jsr       (A2)
                    1337   ; //int temp = 0x00;
                    1338   ; //printf("\r\nTURNING ON LED");
                    1339   ; while(1){
                    1340   DAC_function_1:
                    1341   ; //printf("\r\nTEMP: %x", temp);
                    1342   ; TXR_RXR = temp;
0800097A  13C2 0040 1343          move.b    D2,4227078
0800097E  8006      
                    1344   ; CR_SR = 0x11;
08000980  13FC 0011 1345          move.b    #17,4227080
08000984  0040 8008 
                    1346   ; WaitForIICTransmitComplete();
08000988  4E93      1347          jsr       (A3)
                    1348   ; WaitForACK();
0800098A  4E92      1349          jsr       (A2)
                    1350   ; temp++;
0800098C  5282      1351          addq.l    #1,D2
                    1352   ; DELAY();
0800098E  4EB9 0800 1353          jsr       _DELAY
08000992  0206      
08000994  60E4      1354          bra       DAC_function_1
                    1355   ; }
                    1356   ; }
                    1357   ; void ADC_function(void){
                    1358   _ADC_function:
08000996  48E7 3030 1359          movem.l   D2/D3/A2/A3,-(A7)
0800099A  45F9 0800 1360          lea       _WaitForIICTransmitComplete.L,A2
0800099E  0246      
080009A0  47F9 0800 1361          lea       _printf.L,A3
080009A4  0F3A      
                    1362   ; int c;
                    1363   ; int count = 0;
080009A6  4283      1364          clr.l     D3
                    1365   ; TXR_RXR = 0x93; //10010011
080009A8  13FC 0093 1366          move.b    #147,4227078
080009AC  0040 8006 
                    1367   ; CR_SR =  0x91;//10010001: Bit 7 START, BIT 5 Write to Slave, BIT 0 Clear Interrupts
080009B0  13FC 0091 1368          move.b    #145,4227080
080009B4  0040 8008 
                    1369   ; WaitForIICTransmitComplete();
080009B8  4E92      1370          jsr       (A2)
                    1371   ; WaitForACK();
080009BA  4EB9 0800 1372          jsr       _WaitForACK
080009BE  0256      
                    1373   ; while(count<3){
                    1374   ADC_function_1:
080009C0  0C83 0000 1375          cmp.l     #3,D3
080009C4  0003      
080009C6  6C00 0072 1376          bge       ADC_function_3
                    1377   ; CR_SR = 0x21;
080009CA  13FC 0021 1378          move.b    #33,4227080
080009CE  0040 8008 
                    1379   ; WaitForIICTransmitComplete();
080009D2  4E92      1380          jsr       (A2)
                    1381   ; CheckDataReceived();
080009D4  4EB9 0800 1382          jsr       _CheckDataReceived
080009D8  0266      
                    1383   ; c = TXR_RXR;
080009DA  1039 0040 1384          move.b    4227078,D0
080009DE  8006      
080009E0  C0BC 0000 1385          and.l     #255,D0
080009E4  00FF      
080009E6  2400      1386          move.l    D0,D2
                    1387   ; if (count%3==0)
080009E8  2F03      1388          move.l    D3,-(A7)
080009EA  4878 0003 1389          pea       3
080009EE  4EB9 0800 1390          jsr       LDIV
080009F2  0DCE      
080009F4  202F 0004 1391          move.l    4(A7),D0
080009F8  504F      1392          addq.w    #8,A7
080009FA  4A80      1393          tst.l     D0
080009FC  6604      1394          bne.s     ADC_function_4
080009FE  6000 0036 1395          bra       ADC_function_7
                    1396   ADC_function_4:
                    1397   ; ;//printf("\r\nValue of EXTERNAL:%x",c);
                    1398   ; else if(count%3==1)
08000A02  2F03      1399          move.l    D3,-(A7)
08000A04  4878 0003 1400          pea       3
08000A08  4EB9 0800 1401          jsr       LDIV
08000A0C  0DCE      
08000A0E  202F 0004 1402          move.l    4(A7),D0
08000A12  504F      1403          addq.w    #8,A7
08000A14  0C80 0000 1404          cmp.l     #1,D0
08000A18  0001      
08000A1A  660E      1405          bne.s     ADC_function_6
                    1406   ; printf("\r\nValue of PHOTORESISTOR:%x",c);
08000A1C  2F02      1407          move.l    D2,-(A7)
08000A1E  4879 0800 1408          pea       @lab3_p~1_21.L
08000A22  1AE0      
08000A24  4E93      1409          jsr       (A3)
08000A26  504F      1410          addq.w    #8,A7
08000A28  600C      1411          bra.s     ADC_function_7
                    1412   ADC_function_6:
                    1413   ; else
                    1414   ; printf("\r\nValue of THERMISTOR:%x",c);
08000A2A  2F02      1415          move.l    D2,-(A7)
08000A2C  4879 0800 1416          pea       @lab3_p~1_22.L
08000A30  1AFC      
08000A32  4E93      1417          jsr       (A3)
08000A34  504F      1418          addq.w    #8,A7
                    1419   ADC_function_7:
                    1420   ; count++;
08000A36  5283      1421          addq.l    #1,D3
08000A38  6086      1422          bra       ADC_function_1
                    1423   ADC_function_3:
                    1424   ; }
                    1425   ; CR_SR =  0x29;//READ, NACK, IACK
08000A3A  13FC 0029 1426          move.b    #41,4227080
08000A3E  0040 8008 
                    1427   ; WaitForIICTransmitComplete();
08000A42  4E92      1428          jsr       (A2)
                    1429   ; CheckDataReceived();
08000A44  4EB9 0800 1430          jsr       _CheckDataReceived
08000A48  0266      
                    1431   ; c = TXR_RXR;
08000A4A  1039 0040 1432          move.b    4227078,D0
08000A4E  8006      
08000A50  C0BC 0000 1433          and.l     #255,D0
08000A54  00FF      
08000A56  2400      1434          move.l    D0,D2
                    1435   ; printf("\r\nValue of POTENTIOMETER:%x",c);
08000A58  2F02      1436          move.l    D2,-(A7)
08000A5A  4879 0800 1437          pea       @lab3_p~1_23.L
08000A5E  1B16      
08000A60  4E93      1438          jsr       (A3)
08000A62  504F      1439          addq.w    #8,A7
                    1440   ; CR_SR =  0x41;
08000A64  13FC 0041 1441          move.b    #65,4227080
08000A68  0040 8008 
                    1442   ; WaitForIICTransmitComplete();
08000A6C  4E92      1443          jsr       (A2)
08000A6E  4CDF 0C0C 1444          movem.l   (A7)+,D2/D3/A2/A3
08000A72  4E75      1445          rts
                    1446   ; }
                    1447   ; void main(void){
                    1448   _main:
08000A74  4E56 FFF8 1449          link      A6,#-8
08000A78  48E7 3F3C 1450          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000A7C  45F9 0800 1451          lea       _printf.L,A2
08000A80  0F3A      
08000A82  47F9 0800 1452          lea       _Get2HexDigits.L,A3
08000A86  012A      
08000A88  49F9 0800 1453          lea       __getch.L,A4
08000A8C  0094      
                    1454   ; int *testarr;
                    1455   ; int val;
                    1456   ; IIC_Init();
08000A8E  4EB9 0800 1457          jsr       _IIC_Init
08000A92  022E      
                    1458   ; //DAC_function();
                    1459   ; //ADC_function();
                    1460   ; //Write byte to EEPROM
                    1461   ; //Write128kEEProm(0xFF, 0x81, 0, 256);
                    1462   ; //printf("\r\n********NEW ADDRESSES*********");
                    1463   ; //printf("\r\nLower addr: %x , Upper Address: %x",testarr[0], testarr[1]);
                    1464   ; //Read byte from EEPROM
                    1465   ; //printf("\r\nFIRST READ USING 128K READ");
                    1466   ; //Read128kEEProm(0xFF, 0x80, 0, 256);
                    1467   ; //PageReadEEProm(0xFF, 0x80, 0);
                    1468   ; printf("\r\n*************************************");
08000A94  4879 0800 1469          pea       @lab3_p~1_24.L
08000A98  1B32      
08000A9A  4E92      1470          jsr       (A2)
08000A9C  584F      1471          addq.w    #4,A7
                    1472   ; printf("\r\nWelcome to EEPROM and ADC/DAC Testing");
08000A9E  4879 0800 1473          pea       @lab3_p~1_25.L
08000AA2  1B5A      
08000AA4  4E92      1474          jsr       (A2)
08000AA6  584F      1475          addq.w    #4,A7
                    1476   ; printf("\r\n*************************************");
08000AA8  4879 0800 1477          pea       @lab3_p~1_24.L
08000AAC  1B32      
08000AAE  4E92      1478          jsr       (A2)
08000AB0  584F      1479          addq.w    #4,A7
                    1480   ; printf("\r\n");
08000AB2  4879 0800 1481          pea       @lab3_p~1_26.L
08000AB6  1B82      
08000AB8  4E92      1482          jsr       (A2)
08000ABA  584F      1483          addq.w    #4,A7
                    1484   ; while(1){
                    1485   main_1:
                    1486   ; int command_selection;
                    1487   ; int byte_to_write, bytes_to_read, upper_addr, lower_addr, block_num, bytes_to_write;
                    1488   ; printf("\r\nInput 1 For Write Byte");
08000ABC  4879 0800 1489          pea       @lab3_p~1_27.L
08000AC0  1B86      
08000AC2  4E92      1490          jsr       (A2)
08000AC4  584F      1491          addq.w    #4,A7
                    1492   ; printf("\r\nInput 2 For Read Byte");
08000AC6  4879 0800 1493          pea       @lab3_p~1_28.L
08000ACA  1BA0      
08000ACC  4E92      1494          jsr       (A2)
08000ACE  584F      1495          addq.w    #4,A7
                    1496   ; printf("\r\nInput 3 For Write (up to) 128K bytes");
08000AD0  4879 0800 1497          pea       @lab3_p~1_29.L
08000AD4  1BB8      
08000AD6  4E92      1498          jsr       (A2)
08000AD8  584F      1499          addq.w    #4,A7
                    1500   ; printf("\r\nInput 4 For Read (up to) 128K bytes");
08000ADA  4879 0800 1501          pea       @lab3_p~1_30.L
08000ADE  1BE0      
08000AE0  4E92      1502          jsr       (A2)
08000AE2  584F      1503          addq.w    #4,A7
                    1504   ; printf("\r\nInput 5 For LED (DAC Function)");
08000AE4  4879 0800 1505          pea       @lab3_p~1_31.L
08000AE8  1C06      
08000AEA  4E92      1506          jsr       (A2)
08000AEC  584F      1507          addq.w    #4,A7
                    1508   ; printf("\r\nInput 6 For All Sensor Readings (ADC Function)");
08000AEE  4879 0800 1509          pea       @lab3_p~1_32.L
08000AF2  1C28      
08000AF4  4E92      1510          jsr       (A2)
08000AF6  584F      1511          addq.w    #4,A7
                    1512   ; printf("\r\nENTER SELECTION: ");
08000AF8  4879 0800 1513          pea       @lab3_p~1_33.L
08000AFC  1C5A      
08000AFE  4E92      1514          jsr       (A2)
08000B00  584F      1515          addq.w    #4,A7
                    1516   ; command_selection = _getch();
08000B02  4E94      1517          jsr       (A4)
08000B04  2A00      1518          move.l    D0,D5
                    1519   ; if (command_selection == '1'){
08000B06  0C85 0000 1520          cmp.l     #49,D5
08000B0A  0031      
08000B0C  6600 0098 1521          bne       main_4
                    1522   ; printf("\r\nYou have selected Write Byte");
08000B10  4879 0800 1523          pea       @lab3_p~1_34.L
08000B14  1C6E      
08000B16  4E92      1524          jsr       (A2)
08000B18  584F      1525          addq.w    #4,A7
                    1526   ; printf("\r\nEnter byte to write: ");
08000B1A  4879 0800 1527          pea       @lab3_p~1_35.L
08000B1E  1C8E      
08000B20  4E92      1528          jsr       (A2)
08000B22  584F      1529          addq.w    #4,A7
                    1530   ; byte_to_write = Get2HexDigits(0);
08000B24  42A7      1531          clr.l     -(A7)
08000B26  4E93      1532          jsr       (A3)
08000B28  584F      1533          addq.w    #4,A7
08000B2A  2A40      1534          move.l    D0,A5
                    1535   ; printf("\r\nEnter upper address: ");
08000B2C  4879 0800 1536          pea       @lab3_p~1_36.L
08000B30  1CA6      
08000B32  4E92      1537          jsr       (A2)
08000B34  584F      1538          addq.w    #4,A7
                    1539   ; upper_addr = Get2HexDigits(0);
08000B36  42A7      1540          clr.l     -(A7)
08000B38  4E93      1541          jsr       (A3)
08000B3A  584F      1542          addq.w    #4,A7
08000B3C  2800      1543          move.l    D0,D4
                    1544   ; printf("\r\nEnter lower address: ");
08000B3E  4879 0800 1545          pea       @lab3_p~1_37.L
08000B42  1CBE      
08000B44  4E92      1546          jsr       (A2)
08000B46  584F      1547          addq.w    #4,A7
                    1548   ; lower_addr = Get2HexDigits(0);
08000B48  42A7      1549          clr.l     -(A7)
08000B4A  4E93      1550          jsr       (A3)
08000B4C  584F      1551          addq.w    #4,A7
08000B4E  2600      1552          move.l    D0,D3
                    1553   ; printf("\r\nEnter block number (0 or 1): ");
08000B50  4879 0800 1554          pea       @lab3_p~1_38.L
08000B54  1CD6      
08000B56  4E92      1555          jsr       (A2)
08000B58  584F      1556          addq.w    #4,A7
                    1557   ; block_num = _getch();
08000B5A  4E94      1558          jsr       (A4)
08000B5C  2400      1559          move.l    D0,D2
                    1560   ; printf("\r\nWriting byte %x to upper addr %x, lower addr %x, block number %d....", byte_to_write, upper_addr, lower_addr,block_num-'0');
08000B5E  2202      1561          move.l    D2,D1
08000B60  0481 0000 1562          sub.l     #48,D1
08000B64  0030      
08000B66  2F01      1563          move.l    D1,-(A7)
08000B68  2F03      1564          move.l    D3,-(A7)
08000B6A  2F04      1565          move.l    D4,-(A7)
08000B6C  2F0D      1566          move.l    A5,-(A7)
08000B6E  4879 0800 1567          pea       @lab3_p~1_39.L
08000B72  1CF6      
08000B74  4E92      1568          jsr       (A2)
08000B76  DEFC 0014 1569          add.w     #20,A7
                    1570   ; WriteByteEEProm(byte_to_write, upper_addr, lower_addr, 1, block_num-'0');
08000B7A  2202      1571          move.l    D2,D1
08000B7C  0481 0000 1572          sub.l     #48,D1
08000B80  0030      
08000B82  2F01      1573          move.l    D1,-(A7)
08000B84  4878 0001 1574          pea       1
08000B88  2F03      1575          move.l    D3,-(A7)
08000B8A  2F04      1576          move.l    D4,-(A7)
08000B8C  2F0D      1577          move.l    A5,-(A7)
08000B8E  4EB9 0800 1578          jsr       _WriteByteEEProm
08000B92  038C      
08000B94  DEFC 0014 1579          add.w     #20,A7
                    1580   ; printf("\r\nByte write completed");
08000B98  4879 0800 1581          pea       @lab3_p~1_40.L
08000B9C  1D3E      
08000B9E  4E92      1582          jsr       (A2)
08000BA0  584F      1583          addq.w    #4,A7
08000BA2  6000 020A 1584          bra       main_13
                    1585   main_4:
                    1586   ; }
                    1587   ; else if (command_selection == '2'){
08000BA6  0C85 0000 1588          cmp.l     #50,D5
08000BAA  0032      
08000BAC  6600 0082 1589          bne       main_6
                    1590   ; printf("\r\nYou have selected Read Byte");
08000BB0  4879 0800 1591          pea       @lab3_p~1_41.L
08000BB4  1D56      
08000BB6  4E92      1592          jsr       (A2)
08000BB8  584F      1593          addq.w    #4,A7
                    1594   ; printf("\r\nEnter upper address: ");
08000BBA  4879 0800 1595          pea       @lab3_p~1_36.L
08000BBE  1CA6      
08000BC0  4E92      1596          jsr       (A2)
08000BC2  584F      1597          addq.w    #4,A7
                    1598   ; upper_addr = Get2HexDigits(0);
08000BC4  42A7      1599          clr.l     -(A7)
08000BC6  4E93      1600          jsr       (A3)
08000BC8  584F      1601          addq.w    #4,A7
08000BCA  2800      1602          move.l    D0,D4
                    1603   ; printf("\r\nEnter lower address: ");
08000BCC  4879 0800 1604          pea       @lab3_p~1_37.L
08000BD0  1CBE      
08000BD2  4E92      1605          jsr       (A2)
08000BD4  584F      1606          addq.w    #4,A7
                    1607   ; lower_addr = Get2HexDigits(0);
08000BD6  42A7      1608          clr.l     -(A7)
08000BD8  4E93      1609          jsr       (A3)
08000BDA  584F      1610          addq.w    #4,A7
08000BDC  2600      1611          move.l    D0,D3
                    1612   ; printf("\r\nEnter block number (0 or 1): ");
08000BDE  4879 0800 1613          pea       @lab3_p~1_38.L
08000BE2  1CD6      
08000BE4  4E92      1614          jsr       (A2)
08000BE6  584F      1615          addq.w    #4,A7
                    1616   ; block_num = _getch();
08000BE8  4E94      1617          jsr       (A4)
08000BEA  2400      1618          move.l    D0,D2
                    1619   ; printf("\r\nReading byte from upper addr %x, lower addr %x, block number %d....",upper_addr, lower_addr, block_num-'0');
08000BEC  2202      1620          move.l    D2,D1
08000BEE  0481 0000 1621          sub.l     #48,D1
08000BF2  0030      
08000BF4  2F01      1622          move.l    D1,-(A7)
08000BF6  2F03      1623          move.l    D3,-(A7)
08000BF8  2F04      1624          move.l    D4,-(A7)
08000BFA  4879 0800 1625          pea       @lab3_p~1_42.L
08000BFE  1D74      
08000C00  4E92      1626          jsr       (A2)
08000C02  DEFC 0010 1627          add.w     #16,A7
                    1628   ; ReadByteEEProm(upper_addr, lower_addr, 1, block_num-'0');
08000C06  2202      1629          move.l    D2,D1
08000C08  0481 0000 1630          sub.l     #48,D1
08000C0C  0030      
08000C0E  2F01      1631          move.l    D1,-(A7)
08000C10  4878 0001 1632          pea       1
08000C14  2F03      1633          move.l    D3,-(A7)
08000C16  2F04      1634          move.l    D4,-(A7)
08000C18  4EB9 0800 1635          jsr       _ReadByteEEProm
08000C1C  027E      
08000C1E  DEFC 0010 1636          add.w     #16,A7
                    1637   ; printf("\r\nByte read completed");
08000C22  4879 0800 1638          pea       @lab3_p~1_43.L
08000C26  1DBA      
08000C28  4E92      1639          jsr       (A2)
08000C2A  584F      1640          addq.w    #4,A7
08000C2C  6000 0180 1641          bra       main_13
                    1642   main_6:
                    1643   ; }
                    1644   ; else if (command_selection == '3'){
08000C30  0C85 0000 1645          cmp.l     #51,D5
08000C34  0033      
08000C36  6600 0098 1646          bne       main_8
                    1647   ; printf("\r\nYou have selected Write 128k Byte");
08000C3A  4879 0800 1648          pea       @lab3_p~1_44.L
08000C3E  1DD0      
08000C40  4E92      1649          jsr       (A2)
08000C42  584F      1650          addq.w    #4,A7
                    1651   ; printf("\r\nEnter bytes to write: ");
08000C44  4879 0800 1652          pea       @lab3_p~1_45.L
08000C48  1DF4      
08000C4A  4E92      1653          jsr       (A2)
08000C4C  584F      1654          addq.w    #4,A7
                    1655   ; bytes_to_write = Get6HexDigits(0);
08000C4E  42A7      1656          clr.l     -(A7)
08000C50  4EB9 0800 1657          jsr       _Get6HexDigits
08000C54  01B0      
08000C56  584F      1658          addq.w    #4,A7
08000C58  2E00      1659          move.l    D0,D7
                    1660   ; printf("\r\nEnter upper address: ");
08000C5A  4879 0800 1661          pea       @lab3_p~1_36.L
08000C5E  1CA6      
08000C60  4E92      1662          jsr       (A2)
08000C62  584F      1663          addq.w    #4,A7
                    1664   ; upper_addr = Get2HexDigits(0);
08000C64  42A7      1665          clr.l     -(A7)
08000C66  4E93      1666          jsr       (A3)
08000C68  584F      1667          addq.w    #4,A7
08000C6A  2800      1668          move.l    D0,D4
                    1669   ; printf("\r\nEnter lower address: ");
08000C6C  4879 0800 1670          pea       @lab3_p~1_37.L
08000C70  1CBE      
08000C72  4E92      1671          jsr       (A2)
08000C74  584F      1672          addq.w    #4,A7
                    1673   ; lower_addr = Get2HexDigits(0);
08000C76  42A7      1674          clr.l     -(A7)
08000C78  4E93      1675          jsr       (A3)
08000C7A  584F      1676          addq.w    #4,A7
08000C7C  2600      1677          move.l    D0,D3
                    1678   ; printf("\r\nEnter block number (0 or 1): ");
08000C7E  4879 0800 1679          pea       @lab3_p~1_38.L
08000C82  1CD6      
08000C84  4E92      1680          jsr       (A2)
08000C86  584F      1681          addq.w    #4,A7
                    1682   ; block_num = _getch();
08000C88  4E94      1683          jsr       (A4)
08000C8A  2400      1684          move.l    D0,D2
                    1685   ; printf("\r\nWriting %d bytes to upper addr %x, lower addr %x, block number %d....", bytes_to_write, upper_addr, lower_addr,block_num-'0');
08000C8C  2202      1686          move.l    D2,D1
08000C8E  0481 0000 1687          sub.l     #48,D1
08000C92  0030      
08000C94  2F01      1688          move.l    D1,-(A7)
08000C96  2F03      1689          move.l    D3,-(A7)
08000C98  2F04      1690          move.l    D4,-(A7)
08000C9A  2F07      1691          move.l    D7,-(A7)
08000C9C  4879 0800 1692          pea       @lab3_p~1_46.L
08000CA0  1E0E      
08000CA2  4E92      1693          jsr       (A2)
08000CA4  DEFC 0014 1694          add.w     #20,A7
                    1695   ; Write128kEEProm(upper_addr, lower_addr, block_num-'0',bytes_to_write);
08000CA8  2F07      1696          move.l    D7,-(A7)
08000CAA  2202      1697          move.l    D2,D1
08000CAC  0481 0000 1698          sub.l     #48,D1
08000CB0  0030      
08000CB2  2F01      1699          move.l    D1,-(A7)
08000CB4  2F03      1700          move.l    D3,-(A7)
08000CB6  2F04      1701          move.l    D4,-(A7)
08000CB8  4EB9 0800 1702          jsr       _Write128kEEProm
08000CBC  0556      
08000CBE  DEFC 0010 1703          add.w     #16,A7
                    1704   ; printf("\r\n(Up to) 128k Byte write completed");
08000CC2  4879 0800 1705          pea       @lab3_p~1_47.L
08000CC6  1E56      
08000CC8  4E92      1706          jsr       (A2)
08000CCA  584F      1707          addq.w    #4,A7
08000CCC  6000 00E0 1708          bra       main_13
                    1709   main_8:
                    1710   ; }
                    1711   ; else if (command_selection == '4'){
08000CD0  0C85 0000 1712          cmp.l     #52,D5
08000CD4  0034      
08000CD6  6600 0098 1713          bne       main_10
                    1714   ; printf("\r\nYou have selected Read 128k Byte");
08000CDA  4879 0800 1715          pea       @lab3_p~1_48.L
08000CDE  1E7A      
08000CE0  4E92      1716          jsr       (A2)
08000CE2  584F      1717          addq.w    #4,A7
                    1718   ; printf("\r\nEnter bytes to read: ");
08000CE4  4879 0800 1719          pea       @lab3_p~1_49.L
08000CE8  1E9E      
08000CEA  4E92      1720          jsr       (A2)
08000CEC  584F      1721          addq.w    #4,A7
                    1722   ; bytes_to_read = Get6HexDigits(0);
08000CEE  42A7      1723          clr.l     -(A7)
08000CF0  4EB9 0800 1724          jsr       _Get6HexDigits
08000CF4  01B0      
08000CF6  584F      1725          addq.w    #4,A7
08000CF8  2C00      1726          move.l    D0,D6
                    1727   ; printf("\r\nEnter upper address: ");
08000CFA  4879 0800 1728          pea       @lab3_p~1_36.L
08000CFE  1CA6      
08000D00  4E92      1729          jsr       (A2)
08000D02  584F      1730          addq.w    #4,A7
                    1731   ; upper_addr = Get2HexDigits(0);
08000D04  42A7      1732          clr.l     -(A7)
08000D06  4E93      1733          jsr       (A3)
08000D08  584F      1734          addq.w    #4,A7
08000D0A  2800      1735          move.l    D0,D4
                    1736   ; printf("\r\nEnter lower address: ");
08000D0C  4879 0800 1737          pea       @lab3_p~1_37.L
08000D10  1CBE      
08000D12  4E92      1738          jsr       (A2)
08000D14  584F      1739          addq.w    #4,A7
                    1740   ; lower_addr = Get2HexDigits(0);
08000D16  42A7      1741          clr.l     -(A7)
08000D18  4E93      1742          jsr       (A3)
08000D1A  584F      1743          addq.w    #4,A7
08000D1C  2600      1744          move.l    D0,D3
                    1745   ; printf("\r\nEnter block number (0 or 1): ");
08000D1E  4879 0800 1746          pea       @lab3_p~1_38.L
08000D22  1CD6      
08000D24  4E92      1747          jsr       (A2)
08000D26  584F      1748          addq.w    #4,A7
                    1749   ; block_num = _getch();
08000D28  4E94      1750          jsr       (A4)
08000D2A  2400      1751          move.l    D0,D2
                    1752   ; printf("\r\nReading %d bytes from upper addr %x, lower addr %x, block number %d....", bytes_to_read, upper_addr, lower_addr,block_num-'0');
08000D2C  2202      1753          move.l    D2,D1
08000D2E  0481 0000 1754          sub.l     #48,D1
08000D32  0030      
08000D34  2F01      1755          move.l    D1,-(A7)
08000D36  2F03      1756          move.l    D3,-(A7)
08000D38  2F04      1757          move.l    D4,-(A7)
08000D3A  2F06      1758          move.l    D6,-(A7)
08000D3C  4879 0800 1759          pea       @lab3_p~1_50.L
08000D40  1EB6      
08000D42  4E92      1760          jsr       (A2)
08000D44  DEFC 0014 1761          add.w     #20,A7
                    1762   ; Read128kEEProm(upper_addr, lower_addr, block_num-'0',bytes_to_read);
08000D48  2F06      1763          move.l    D6,-(A7)
08000D4A  2202      1764          move.l    D2,D1
08000D4C  0481 0000 1765          sub.l     #48,D1
08000D50  0030      
08000D52  2F01      1766          move.l    D1,-(A7)
08000D54  2F03      1767          move.l    D3,-(A7)
08000D56  2F04      1768          move.l    D4,-(A7)
08000D58  4EB9 0800 1769          jsr       _Read128kEEProm
08000D5C  0826      
08000D5E  DEFC 0010 1770          add.w     #16,A7
                    1771   ; printf("\r\n(Up to) 128k Byte read completed");
08000D62  4879 0800 1772          pea       @lab3_p~1_51.L
08000D66  1F00      
08000D68  4E92      1773          jsr       (A2)
08000D6A  584F      1774          addq.w    #4,A7
08000D6C  6000 0040 1775          bra       main_13
                    1776   main_10:
                    1777   ; }
                    1778   ; else if (command_selection == '5'){
08000D70  0C85 0000 1779          cmp.l     #53,D5
08000D74  0035      
08000D76  661C      1780          bne.s     main_12
                    1781   ; printf("\r\nYou have selected LED (DAC)");
08000D78  4879 0800 1782          pea       @lab3_p~1_52.L
08000D7C  1F24      
08000D7E  4E92      1783          jsr       (A2)
08000D80  584F      1784          addq.w    #4,A7
                    1785   ; printf("\r\nShowing continous streaming data on LED....");
08000D82  4879 0800 1786          pea       @lab3_p~1_53.L
08000D86  1F42      
08000D88  4E92      1787          jsr       (A2)
08000D8A  584F      1788          addq.w    #4,A7
                    1789   ; DAC_function();
08000D8C  4EB9 0800 1790          jsr       _DAC_function
08000D90  0940      
08000D92  601A      1791          bra.s     main_13
                    1792   main_12:
                    1793   ; }
                    1794   ; else{
                    1795   ; printf("\r\nYou have selected Sensor Reads (ADC Function)");
08000D94  4879 0800 1796          pea       @lab3_p~1_54.L
08000D98  1F70      
08000D9A  4E92      1797          jsr       (A2)
08000D9C  584F      1798          addq.w    #4,A7
                    1799   ; printf("\r\nShowing readings from 3 sensors....");
08000D9E  4879 0800 1800          pea       @lab3_p~1_55.L
08000DA2  1FA0      
08000DA4  4E92      1801          jsr       (A2)
08000DA6  584F      1802          addq.w    #4,A7
                    1803   ; ADC_function();
08000DA8  4EB9 0800 1804          jsr       _ADC_function
08000DAC  0996      
                    1805   main_13:
                    1806   ; }
                    1807   ; printf("\r\n***********************************************");
08000DAE  4879 0800 1808          pea       @lab3_p~1_56.L
08000DB2  1FC6      
08000DB4  4E92      1809          jsr       (A2)
08000DB6  584F      1810          addq.w    #4,A7
08000DB8  6000 FD02 1811          bra       main_1
                    1812   ; }
                    1813   ; }
                    1814   ULDIV:
08000DBC  4E56 0000 1815          link    A6,#0
08000DC0  48E7 C000 1816          movem.l D0/D1,-(A7)
08000DC4  222E 0008 1817          move.l  8(A6),D1
08000DC8  202E 000C 1818          move.l  12(A6),D0
08000DCC  6036      1819          bra.s   ldiv_3
                    1820   LDIV:
08000DCE  4E56 0000 1821          link    A6,#0
08000DD2  48E7 C000 1822          movem.l D0/D1,-(A7)
08000DD6  222E 0008 1823          move.l  8(A6),D1
08000DDA  202E 000C 1824          move.l  12(A6),D0
08000DDE  4A80      1825          tst.l   D0
08000DE0  6A0E      1826          bpl.s   ldiv_1
08000DE2  4480      1827          neg.l   D0
08000DE4  4A81      1828          tst.l   D1
08000DE6  6A14      1829          bpl.s   ldiv_2
08000DE8  4481      1830          neg.l   D1
08000DEA  612A      1831          bsr.s   dodiv
08000DEC  4481      1832          neg.l   D1
08000DEE  6016      1833          bra.s   ldiv_4
                    1834   ldiv_1:
08000DF0  4A81      1835          tst.l   D1
08000DF2  6A10      1836          bpl.s   ldiv_3
08000DF4  4481      1837          neg.l   D1
08000DF6  611E      1838          bsr.s   dodiv
08000DF8  4480      1839          neg.l   D0
08000DFA  600A      1840          bra.s   ldiv_4
                    1841   ldiv_2:
08000DFC  6118      1842          bsr.s   dodiv
08000DFE  4480      1843          neg.l   D0
08000E00  4481      1844          neg.l   D1
08000E02  6002      1845          bra.s   ldiv_4
                    1846   ldiv_3:
08000E04  6110      1847          bsr.s   dodiv
                    1848   ldiv_4:
08000E06  2D40 0008 1849          move.l  D0,8(A6)
08000E0A  2D41 000C 1850          move.l  D1,12(A6)
08000E0E  4CDF 0003 1851          movem.l (A7)+,D0/D1
08000E12  4E5E      1852          unlk    A6
08000E14  4E75      1853          rts
                    1854   dodiv:
08000E16  0C81 0000 1855          cmpi.l  #$FFFF,D1
08000E1A  FFFF      
08000E1C  6236      1856          bhi.s   dodiv_2
08000E1E  0C80 0000 1857          cmpi.l  #$FFFF,D0
08000E22  FFFF      
08000E24  6210      1858          bhi.s   dodiv_1
08000E26  80C1      1859          divu    D1,D0
08000E28  2200      1860          move.l  D0,D1
08000E2A  4241      1861          clr.w   D1
08000E2C  4841      1862          swap    D1
08000E2E  0280 0000 1863          andi.l  #$FFFF,D0
08000E32  FFFF      
08000E34  4E75      1864          rts
                    1865   dodiv_1:
08000E36  48A7 A000 1866          movem.w D0/D2,-(A7)
08000E3A  4240      1867          clr.w   D0
08000E3C  4840      1868          swap    D0
08000E3E  80C1      1869          divu    D1,D0
08000E40  3400      1870          move.w  D0,D2
08000E42  301F      1871          move.w  (A7)+,D0
08000E44  80C1      1872          divu    D1,D0
08000E46  4840      1873          swap    D0
08000E48  4281      1874          clr.l   D1
08000E4A  3200      1875          move.w  D0,D1
08000E4C  3002      1876          move.w  D2,D0
08000E4E  4840      1877          swap    D0
08000E50  341F      1878          move.w  (A7)+,D2
08000E52  4E75      1879          rts
                    1880   dodiv_2:
08000E54  48E7 3800 1881          movem.l D2/D3/D4,-(A7)
08000E58  2401      1882          move.l  D1,D2
08000E5A  4242      1883          clr.w   D2
08000E5C  4842      1884          swap    D2
08000E5E  5282      1885          addq.l  #1,D2
08000E60  2600      1886          move.l  D0,D3
08000E62  2801      1887          move.l  D1,D4
08000E64  2202      1888          move.l  D2,D1
08000E66  61CE      1889          bsr.s   dodiv_1
08000E68  2204      1890          move.l  D4,D1
08000E6A  82C2      1891          divu    D2,D1
08000E6C  80C1      1892          divu    D1,D0
08000E6E  0280 0000 1893          andi.l  #$FFFF,D0
08000E72  FFFF      
                    1894   dodiv_3:
08000E74  2204      1895          move.l  D4,D1
08000E76  2404      1896          move.l  D4,D2
08000E78  4842      1897          swap    D2
08000E7A  C2C0      1898          mulu    D0,D1
08000E7C  C4C0      1899          mulu    D0,D2
08000E7E  4842      1900          swap    D2
08000E80  D282      1901          add.l   D2,D1
08000E82  9283      1902          sub.l   D3,D1
08000E84  620A      1903          bhi.s   dodiv_4
08000E86  4481      1904          neg.l   D1
08000E88  B881      1905          cmp.l   D1,D4
08000E8A  6208      1906          bhi.s   dodiv_5
08000E8C  5280      1907          addq.l  #1,D0
08000E8E  60E4      1908          bra.s   dodiv_3
                    1909   dodiv_4:
08000E90  5380      1910          subq.l  #1,D0
08000E92  60E0      1911          bra.s   dodiv_3
                    1912   dodiv_5:
08000E94  4CDF 001C 1913          movem.l (A7)+,D2/D3/D4
08000E98  4E75      1914          rts
                    1915   ULMUL:
08000E9A  4E56 0000 1916          link    A6,#0
08000E9E  48E7 C000 1917          movem.l D0/D1,-(A7)
08000EA2  222E 0008 1918          move.l  8(A6),D1
08000EA6  202E 000C 1919          move.l  12(A6),D0
08000EAA  602C      1920          bra.s   lmul_3
                    1921   LMUL:
08000EAC  4E56 0000 1922          link    A6,#0
08000EB0  48E7 C000 1923          movem.l D0/D1,-(A7)
08000EB4  222E 0008 1924          move.l  8(A6),D1
08000EB8  202E 000C 1925          move.l  12(A6),D0
08000EBC  4A80      1926          tst.l   D0
08000EBE  6A0A      1927          bpl.s   lmul_1
08000EC0  4480      1928          neg.l   D0
08000EC2  4A81      1929          tst.l   D1
08000EC4  6A0A      1930          bpl.s   lmul_2
08000EC6  4481      1931          neg.l   D1
08000EC8  600E      1932          bra.s   lmul_3
                    1933   lmul_1:
08000ECA  4A81      1934          tst.l   D1
08000ECC  6A0A      1935          bpl.s   lmul_3
08000ECE  4481      1936          neg.l   D1
                    1937   lmul_2:
08000ED0  6114      1938          bsr.s   domul
08000ED2  4481      1939          neg.l   D1
08000ED4  4080      1940          negx.l  D0
08000ED6  6002      1941          bra.s   lmul_4
                    1942   lmul_3:
08000ED8  610C      1943          bsr.s   domul
                    1944   lmul_4:
08000EDA  2D41 0008 1945          move.l  D1,8(A6)
08000EDE  4CDF 0003 1946          movem.l (A7)+,D0/D1
08000EE2  4E5E      1947          unlk    A6
08000EE4  4E75      1948          rts
                    1949   domul:
08000EE6  0C81 0000 1950          cmpi.l  #$FFFF,D1
08000EEA  FFFF      
08000EEC  620C      1951          bhi.s   domul_1
08000EEE  0C80 0000 1952          cmpi.l  #$FFFF,D0
08000EF2  FFFF      
08000EF4  620E      1953          bhi.s   domul_2
08000EF6  C2C0      1954          mulu    D0,D1
08000EF8  4E75      1955          rts
                    1956   domul_1:
08000EFA  0C80 0000 1957          cmpi.l  #$FFFF,D0
08000EFE  FFFF      
08000F00  6218      1958          bhi.s   domul_4
08000F02  6002      1959          bra.s   domul_3
                    1960   domul_2
08000F04  C141      1961          exg     D0,D1
                    1962   domul_3:
08000F06  2F02      1963          move.l  D2,-(A7)
08000F08  2401      1964          move.l  D1,D2
08000F0A  4842      1965          swap    D2
08000F0C  C2C0      1966          mulu    D0,D1
08000F0E  C4C0      1967          mulu    D0,D2
08000F10  4842      1968          swap    D2
08000F12  4242      1969          clr.w   D2
08000F14  D282      1970          add.l   D2,D1
08000F16  241F      1971          move.l  (A7)+,D2
08000F18  4E75      1972          rts
                    1973   domul_4:
08000F1A  48E7 3000 1974          movem.l D2/D3,-(A7)
08000F1E  2401      1975          move.l  D1,D2
08000F20  2601      1976          move.l  D1,D3
08000F22  C2C0      1977          mulu    D0,D1
08000F24  4842      1978          swap    D2
08000F26  C4C0      1979          mulu    D0,D2
08000F28  4840      1980          swap    D0
08000F2A  C6C0      1981          mulu    D0,D3
08000F2C  D483      1982          add.l   D3,D2
08000F2E  4842      1983          swap    D2
08000F30  4242      1984          clr.w   D2
08000F32  D282      1985          add.l   D2,D1
08000F34  4CDF 000C 1986          movem.l (A7)+,D2/D3
08000F38  4E75      1987          rts
                    1988   _printf:
08000F3A  4E56 FFFC 1989          link      A6,#-4
08000F3E  48E7 2000 1990          movem.l   D2,-(A7)
08000F42  41EE 0008 1991          lea       8(A6),A0
08000F46  5848      1992          addq.w    #4,A0
08000F48  2408      1993          move.l    A0,D2
08000F4A  2F02      1994          move.l    D2,-(A7)
08000F4C  2F2E 0008 1995          move.l    8(A6),-(A7)
08000F50  42A7      1996          clr.l     -(A7)
08000F52  6100 00CA 1997          bsr       _vsprintf
08000F56  DEFC 000C 1998          add.w     #12,A7
08000F5A  2D40 FFFC 1999          move.l    D0,-4(A6)
08000F5E  4282      2000          clr.l     D2
08000F60  202E FFFC 2001          move.l    -4(A6),D0
08000F64  4CDF 0004 2002          movem.l   (A7)+,D2
08000F68  4E5E      2003          unlk      A6
08000F6A  4E75      2004          rts
                    2005   @vsprintf_copy:
08000F6C  4E56 0000 2006          link      A6,#0
08000F70  206E 0008 2007          move.l    8(A6),A0
08000F74  4A90      2008          tst.l     (A0)
08000F76  6710      2009          beq.s     @vsprintf_copy_1
08000F78  202E 000C 2010          move.l    12(A6),D0
08000F7C  206E 0008 2011          move.l    8(A6),A0
08000F80  2250      2012          move.l    (A0),A1
08000F82  5290      2013          addq.l    #1,(A0)
08000F84  1280      2014          move.b    D0,(A1)
08000F86  600A      2015          bra.s     @vsprintf_copy_2
                    2016   @vsprintf_copy_1:
08000F88  2F2E 000C 2017          move.l    12(A6),-(A7)
08000F8C  6100 085E 2018          bsr       _putch
08000F90  584F      2019          addq.w    #4,A7
                    2020   @vsprintf_copy_2:
08000F92  4E5E      2021          unlk      A6
08000F94  4E75      2022          rts
                    2023   @vsprintf_getval:
08000F96  4E56 0000 2024          link      A6,#0
08000F9A  48E7 3000 2025          movem.l   D2/D3,-(A7)
08000F9E  242E 0008 2026          move.l    8(A6),D2
08000FA2  4283      2027          clr.l     D3
08000FA4  2042      2028          move.l    D2,A0
08000FA6  2050      2029          move.l    (A0),A0
08000FA8  1010      2030          move.b    (A0),D0
08000FAA  4880      2031          ext.w     D0
08000FAC  48C0      2032          ext.l     D0
08000FAE  0C80 0000 2033          cmp.l     #42,D0
08000FB2  002A      
08000FB4  6612      2034          bne.s     @vsprintf_getval_1
08000FB6  206E 000C 2035          move.l    12(A6),A0
08000FBA  2250      2036          move.l    (A0),A1
08000FBC  5890      2037          addq.l    #4,(A0)
08000FBE  2611      2038          move.l    (A1),D3
08000FC0  2042      2039          move.l    D2,A0
08000FC2  5290      2040          addq.l    #1,(A0)
08000FC4  6000 004E 2041          bra       @vsprintf_getval_5
                    2042   @vsprintf_getval_1:
08000FC8  2042      2043          move.l    D2,A0
08000FCA  2050      2044          move.l    (A0),A0
08000FCC  1010      2045          move.b    (A0),D0
08000FCE  4880      2046          ext.w     D0
08000FD0  48C0      2047          ext.l     D0
08000FD2  0C80 0000 2048          cmp.l     #48,D0
08000FD6  0030      
08000FD8  6D00 003A 2049          blt       @vsprintf_getval_5
08000FDC  2042      2050          move.l    D2,A0
08000FDE  2050      2051          move.l    (A0),A0
08000FE0  1010      2052          move.b    (A0),D0
08000FE2  4880      2053          ext.w     D0
08000FE4  48C0      2054          ext.l     D0
08000FE6  0C80 0000 2055          cmp.l     #57,D0
08000FEA  0039      
08000FEC  6E26      2056          bgt.s     @vsprintf_getval_5
08000FEE  2F03      2057          move.l    D3,-(A7)
08000FF0  4878 000A 2058          pea       10
08000FF4  6100 FEB6 2059          bsr       LMUL
08000FF8  2017      2060          move.l    (A7),D0
08000FFA  504F      2061          addq.w    #8,A7
08000FFC  2042      2062          move.l    D2,A0
08000FFE  2250      2063          move.l    (A0),A1
08001000  5290      2064          addq.l    #1,(A0)
08001002  1211      2065          move.b    (A1),D1
08001004  4881      2066          ext.w     D1
08001006  48C1      2067          ext.l     D1
08001008  D081      2068          add.l     D1,D0
0800100A  0480 0000 2069          sub.l     #48,D0
0800100E  0030      
08001010  2600      2070          move.l    D0,D3
08001012  60B4      2071          bra       @vsprintf_getval_1
                    2072   @vsprintf_getval_5:
08001014  2003      2073          move.l    D3,D0
08001016  4CDF 000C 2074          movem.l   (A7)+,D2/D3
0800101A  4E5E      2075          unlk      A6
0800101C  4E75      2076          rts
                    2077   _vsprintf:
0800101E  4E56 FFCC 2078          link      A6,#-52
08001022  48E7 3F3C 2079          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08001026  45EE 0008 2080          lea       8(A6),A2
0800102A  47F9 0800 2081          lea       @vsprintf_copy,A3
0800102E  0F6C      
08001030  49F9 0800 2082          lea       _ultoa,A4
08001034  1778      
08001036  4286      2083          clr.l     D6
                    2084   vsprintf_1:
08001038  206E 000C 2085          move.l    12(A6),A0
0800103C  4A10      2086          tst.b     (A0)
0800103E  6700 0624 2087          beq       vsprintf_3
08001042  206E 000C 2088          move.l    12(A6),A0
08001046  1010      2089          move.b    (A0),D0
08001048  4880      2090          ext.w     D0
0800104A  48C0      2091          ext.l     D0
0800104C  0C80 0000 2092          cmp.l     #37,D0
08001050  0025      
08001052  671C      2093          beq.s     vsprintf_4
08001054  206E 000C 2094          move.l    12(A6),A0
08001058  52AE 000C 2095          addq.l    #1,12(A6)
0800105C  1210      2096          move.b    (A0),D1
0800105E  4881      2097          ext.w     D1
08001060  48C1      2098          ext.l     D1
08001062  2F01      2099          move.l    D1,-(A7)
08001064  2F0A      2100          move.l    A2,-(A7)
08001066  4E93      2101          jsr       (A3)
08001068  504F      2102          addq.w    #8,A7
0800106A  5286      2103          addq.l    #1,D6
0800106C  6000 05F2 2104          bra       vsprintf_2
                    2105   vsprintf_4:
08001070  52AE 000C 2106          addq.l    #1,12(A6)
08001074  422E FFD3 2107          clr.b     -45(A6)
08001078  422E FFD2 2108          clr.b     -46(A6)
0800107C  422E FFD0 2109          clr.b     -48(A6)
08001080  422E FFCF 2110          clr.b     -49(A6)
08001084  422E FFCE 2111          clr.b     -50(A6)
08001088  422E FFCD 2112          clr.b     -51(A6)
0800108C  42AE FFFC 2113          clr.l     -4(A6)
08001090  7AFF      2114          moveq     #-1,D5
08001092  41EE FFDC 2115          lea       -36(A6),A0
08001096  2608      2116          move.l    A0,D3
08001098  2408      2117          move.l    A0,D2
                    2118   vsprintf_6:
0800109A  206E 000C 2119          move.l    12(A6),A0
0800109E  1010      2120          move.b    (A0),D0
080010A0  4880      2121          ext.w     D0
080010A2  48C0      2122          ext.l     D0
080010A4  0C80 0000 2123          cmp.l     #43,D0
080010A8  002B      
080010AA  6730      2124          beq.s     vsprintf_12
080010AC  6E18      2125          bgt.s     vsprintf_15
080010AE  0C80 0000 2126          cmp.l     #35,D0
080010B2  0023      
080010B4  6700 003E 2127          beq       vsprintf_14
080010B8  6E00 0046 2128          bgt       vsprintf_9
080010BC  0C80 0000 2129          cmp.l     #32,D0
080010C0  0020      
080010C2  6724      2130          beq.s     vsprintf_13
080010C4  603A      2131          bra.s     vsprintf_9
                    2132   vsprintf_15:
080010C6  0C80 0000 2133          cmp.l     #45,D0
080010CA  002D      
080010CC  6702      2134          beq.s     vsprintf_11
080010CE  6030      2135          bra.s     vsprintf_9
                    2136   vsprintf_11:
080010D0  1D7C 0001 2137          move.b    #1,-51(A6)
080010D4  FFCD      
080010D6  52AE 000C 2138          addq.l    #1,12(A6)
080010DA  6026      2139          bra.s     vsprintf_7
                    2140   vsprintf_12:
080010DC  1D7C 0001 2141          move.b    #1,-50(A6)
080010E0  FFCE      
080010E2  52AE 000C 2142          addq.l    #1,12(A6)
080010E6  601A      2143          bra.s     vsprintf_7
                    2144   vsprintf_13:
080010E8  1D7C 0001 2145          move.b    #1,-49(A6)
080010EC  FFCF      
080010EE  52AE 000C 2146          addq.l    #1,12(A6)
080010F2  600E      2147          bra.s     vsprintf_7
                    2148   vsprintf_14:
080010F4  1D7C 0001 2149          move.b    #1,-48(A6)
080010F8  FFD0      
080010FA  52AE 000C 2150          addq.l    #1,12(A6)
080010FE  6002      2151          bra.s     vsprintf_7
                    2152   vsprintf_9:
08001100  6002      2153          bra.s     vsprintf_8
                    2154   vsprintf_7:
08001102  6096      2155          bra       vsprintf_6
                    2156   vsprintf_8:
08001104  206E 000C 2157          move.l    12(A6),A0
08001108  1010      2158          move.b    (A0),D0
0800110A  4880      2159          ext.w     D0
0800110C  48C0      2160          ext.l     D0
0800110E  0C80 0000 2161          cmp.l     #48,D0
08001112  0030      
08001114  660A      2162          bne.s     vsprintf_16
08001116  52AE 000C 2163          addq.l    #1,12(A6)
0800111A  1D7C 0001 2164          move.b    #1,-46(A6)
0800111E  FFD2      
                    2165   vsprintf_16:
08001120  486E 0010 2166          pea       16(A6)
08001124  486E 000C 2167          pea       12(A6)
08001128  6100 FE6C 2168          bsr       @vsprintf_getval
0800112C  504F      2169          addq.w    #8,A7
0800112E  2A40      2170          move.l    D0,A5
08001130  206E 000C 2171          move.l    12(A6),A0
08001134  1010      2172          move.b    (A0),D0
08001136  4880      2173          ext.w     D0
08001138  48C0      2174          ext.l     D0
0800113A  0C80 0000 2175          cmp.l     #46,D0
0800113E  002E      
08001140  6614      2176          bne.s     vsprintf_18
08001142  52AE 000C 2177          addq.l    #1,12(A6)
08001146  486E 0010 2178          pea       16(A6)
0800114A  486E 000C 2179          pea       12(A6)
0800114E  6100 FE46 2180          bsr       @vsprintf_getval
08001152  504F      2181          addq.w    #8,A7
08001154  2A00      2182          move.l    D0,D5
                    2183   vsprintf_18:
08001156  206E 000C 2184          move.l    12(A6),A0
0800115A  1010      2185          move.b    (A0),D0
0800115C  4880      2186          ext.w     D0
0800115E  48C0      2187          ext.l     D0
08001160  0C80 0000 2188          cmp.l     #108,D0
08001164  006C      
08001166  660A      2189          bne.s     vsprintf_20
08001168  52AE 000C 2190          addq.l    #1,12(A6)
0800116C  1D7C 0001 2191          move.b    #1,-45(A6)
08001170  FFD3      
                    2192   vsprintf_20:
08001172  206E 000C 2193          move.l    12(A6),A0
08001176  1010      2194          move.b    (A0),D0
08001178  4880      2195          ext.w     D0
0800117A  48C0      2196          ext.l     D0
0800117C  0C80 0000 2197          cmp.l     #111,D0
08001180  006F      
08001182  6700 00D4 2198          beq       vsprintf_27
08001186  6E34      2199          bgt.s     vsprintf_33
08001188  0C80 0000 2200          cmp.l     #100,D0
0800118C  0064      
0800118E  6700 0054 2201          beq       vsprintf_24
08001192  6E1C      2202          bgt.s     vsprintf_34
08001194  0C80 0000 2203          cmp.l     #99,D0
08001198  0063      
0800119A  6700 012C 2204          beq       vsprintf_30
0800119E  6E00 016A 2205          bgt       vsprintf_22
080011A2  0C80 0000 2206          cmp.l     #88,D0
080011A6  0058      
080011A8  6700 00E6 2207          beq       vsprintf_28
080011AC  6000 015C 2208          bra       vsprintf_22
                    2209   vsprintf_34:
080011B0  0C80 0000 2210          cmp.l     #105,D0
080011B4  0069      
080011B6  672C      2211          beq.s     vsprintf_24
080011B8  6000 0150 2212          bra       vsprintf_22
                    2213   vsprintf_33:
080011BC  0C80 0000 2214          cmp.l     #117,D0
080011C0  0075      
080011C2  6700 005C 2215          beq       vsprintf_26
080011C6  6E0E      2216          bgt.s     vsprintf_35
080011C8  0C80 0000 2217          cmp.l     #115,D0
080011CC  0073      
080011CE  6700 011C 2218          beq       vsprintf_31
080011D2  6000 0136 2219          bra       vsprintf_22
                    2220   vsprintf_35:
080011D6  0C80 0000 2221          cmp.l     #120,D0
080011DA  0078      
080011DC  6700 00B2 2222          beq       vsprintf_28
080011E0  6000 0128 2223          bra       vsprintf_22
                    2224   vsprintf_24:
080011E4  4A2E FFD3 2225          tst.b     -45(A6)
080011E8  671A      2226          beq.s     vsprintf_36
080011EA  4878 000A 2227          pea       10
080011EE  2F03      2228          move.l    D3,-(A7)
080011F0  206E 0010 2229          move.l    16(A6),A0
080011F4  58AE 0010 2230          addq.l    #4,16(A6)
080011F8  2F10      2231          move.l    (A0),-(A7)
080011FA  6100 04F8 2232          bsr       _ltoa
080011FE  DEFC 000C 2233          add.w     #12,A7
08001202  6018      2234          bra.s     vsprintf_37
                    2235   vsprintf_36:
08001204  4878 000A 2236          pea       10
08001208  2F03      2237          move.l    D3,-(A7)
0800120A  206E 0010 2238          move.l    16(A6),A0
0800120E  58AE 0010 2239          addq.l    #4,16(A6)
08001212  2F10      2240          move.l    (A0),-(A7)
08001214  6100 04DE 2241          bsr       _ltoa
08001218  DEFC 000C 2242          add.w     #12,A7
                    2243   vsprintf_37:
0800121C  6000 00FA 2244          bra       vsprintf_23
                    2245   vsprintf_26:
08001220  4A2E FFD3 2246          tst.b     -45(A6)
08001224  6718      2247          beq.s     vsprintf_38
08001226  4878 000A 2248          pea       10
0800122A  2F03      2249          move.l    D3,-(A7)
0800122C  206E 0010 2250          move.l    16(A6),A0
08001230  58AE 0010 2251          addq.l    #4,16(A6)
08001234  2F10      2252          move.l    (A0),-(A7)
08001236  4E94      2253          jsr       (A4)
08001238  DEFC 000C 2254          add.w     #12,A7
0800123C  6016      2255          bra.s     vsprintf_39
                    2256   vsprintf_38:
0800123E  4878 000A 2257          pea       10
08001242  2F03      2258          move.l    D3,-(A7)
08001244  206E 0010 2259          move.l    16(A6),A0
08001248  58AE 0010 2260          addq.l    #4,16(A6)
0800124C  2F10      2261          move.l    (A0),-(A7)
0800124E  4E94      2262          jsr       (A4)
08001250  DEFC 000C 2263          add.w     #12,A7
                    2264   vsprintf_39:
08001254  6000 00C2 2265          bra       vsprintf_23
                    2266   vsprintf_27:
08001258  4A2E FFD3 2267          tst.b     -45(A6)
0800125C  6718      2268          beq.s     vsprintf_40
0800125E  4878 0008 2269          pea       8
08001262  2F03      2270          move.l    D3,-(A7)
08001264  206E 0010 2271          move.l    16(A6),A0
08001268  58AE 0010 2272          addq.l    #4,16(A6)
0800126C  2F10      2273          move.l    (A0),-(A7)
0800126E  4E94      2274          jsr       (A4)
08001270  DEFC 000C 2275          add.w     #12,A7
08001274  6016      2276          bra.s     vsprintf_41
                    2277   vsprintf_40:
08001276  4878 0008 2278          pea       8
0800127A  2F03      2279          move.l    D3,-(A7)
0800127C  206E 0010 2280          move.l    16(A6),A0
08001280  58AE 0010 2281          addq.l    #4,16(A6)
08001284  2F10      2282          move.l    (A0),-(A7)
08001286  4E94      2283          jsr       (A4)
08001288  DEFC 000C 2284          add.w     #12,A7
                    2285   vsprintf_41:
0800128C  6000 008A 2286          bra       vsprintf_23
                    2287   vsprintf_28:
08001290  4A2E FFD3 2288          tst.b     -45(A6)
08001294  6718      2289          beq.s     vsprintf_42
08001296  4878 0010 2290          pea       16
0800129A  2F03      2291          move.l    D3,-(A7)
0800129C  206E 0010 2292          move.l    16(A6),A0
080012A0  58AE 0010 2293          addq.l    #4,16(A6)
080012A4  2F10      2294          move.l    (A0),-(A7)
080012A6  4E94      2295          jsr       (A4)
080012A8  DEFC 000C 2296          add.w     #12,A7
080012AC  6016      2297          bra.s     vsprintf_43
                    2298   vsprintf_42:
080012AE  4878 0010 2299          pea       16
080012B2  2F03      2300          move.l    D3,-(A7)
080012B4  206E 0010 2301          move.l    16(A6),A0
080012B8  58AE 0010 2302          addq.l    #4,16(A6)
080012BC  2F10      2303          move.l    (A0),-(A7)
080012BE  4E94      2304          jsr       (A4)
080012C0  DEFC 000C 2305          add.w     #12,A7
                    2306   vsprintf_43:
080012C4  6000 0052 2307          bra       vsprintf_23
                    2308   vsprintf_30:
080012C8  206E 0010 2309          move.l    16(A6),A0
080012CC  58AE 0010 2310          addq.l    #4,16(A6)
080012D0  2010      2311          move.l    (A0),D0
080012D2  2042      2312          move.l    D2,A0
080012D4  5282      2313          addq.l    #1,D2
080012D6  1080      2314          move.b    D0,(A0)
080012D8  2042      2315          move.l    D2,A0
080012DA  4210      2316          clr.b     (A0)
080012DC  200D      2317          move.l    A5,D0
080012DE  6704      2318          beq.s     vsprintf_44
080012E0  200D      2319          move.l    A5,D0
080012E2  6002      2320          bra.s     vsprintf_45
                    2321   vsprintf_44:
080012E4  7001      2322          moveq     #1,D0
                    2323   vsprintf_45:
080012E6  2A00      2324          move.l    D0,D5
080012E8  6000 002E 2325          bra       vsprintf_23
                    2326   vsprintf_31:
080012EC  206E 0010 2327          move.l    16(A6),A0
080012F0  58AE 0010 2328          addq.l    #4,16(A6)
080012F4  2610      2329          move.l    (A0),D3
080012F6  0C85 FFFF 2330          cmp.l     #-1,D5
080012FA  FFFF      
080012FC  660A      2331          bne.s     vsprintf_46
080012FE  2F03      2332          move.l    D3,-(A7)
08001300  6100 04D8 2333          bsr       _strlen
08001304  584F      2334          addq.w    #4,A7
08001306  2A00      2335          move.l    D0,D5
                    2336   vsprintf_46:
08001308  600E      2337          bra.s     vsprintf_23
                    2338   vsprintf_22:
0800130A  206E 000C 2339          move.l    12(A6),A0
0800130E  2242      2340          move.l    D2,A1
08001310  5282      2341          addq.l    #1,D2
08001312  1290      2342          move.b    (A0),(A1)
08001314  2042      2343          move.l    D2,A0
08001316  4210      2344          clr.b     (A0)
                    2345   vsprintf_23:
08001318  2F03      2346          move.l    D3,-(A7)
0800131A  6100 04BE 2347          bsr       _strlen
0800131E  584F      2348          addq.w    #4,A7
08001320  1800      2349          move.b    D0,D4
08001322  206E 000C 2350          move.l    12(A6),A0
08001326  1010      2351          move.b    (A0),D0
08001328  4880      2352          ext.w     D0
0800132A  48C0      2353          ext.l     D0
0800132C  0C80 0000 2354          cmp.l     #115,D0
08001330  0073      
08001332  6618      2355          bne.s     vsprintf_48
08001334  0C85 0000 2356          cmp.l     #0,D5
08001338  0000      
0800133A  6D10      2357          blt.s     vsprintf_48
0800133C  4884      2358          ext.w     D4
0800133E  48C4      2359          ext.l     D4
08001340  B885      2360          cmp.l     D5,D4
08001342  6F04      2361          ble.s     vsprintf_50
08001344  1005      2362          move.b    D5,D0
08001346  6002      2363          bra.s     vsprintf_51
                    2364   vsprintf_50:
08001348  1004      2365          move.b    D4,D0
                    2366   vsprintf_51:
0800134A  1800      2367          move.b    D0,D4
                    2368   vsprintf_48:
0800134C  206E 000C 2369          move.l    12(A6),A0
08001350  1010      2370          move.b    (A0),D0
08001352  4880      2371          ext.w     D0
08001354  48C0      2372          ext.l     D0
08001356  0C80 0000 2373          cmp.l     #88,D0
0800135A  0058      
0800135C  6600 0026 2374          bne       vsprintf_56
08001360  41EE FFDC 2375          lea       -36(A6),A0
08001364  2408      2376          move.l    A0,D2
                    2377   vsprintf_54:
08001366  2042      2378          move.l    D2,A0
08001368  4A10      2379          tst.b     (A0)
0800136A  6718      2380          beq.s     vsprintf_56
0800136C  2042      2381          move.l    D2,A0
0800136E  1210      2382          move.b    (A0),D1
08001370  4881      2383          ext.w     D1
08001372  48C1      2384          ext.l     D1
08001374  2F01      2385          move.l    D1,-(A7)
08001376  6100 04A4 2386          bsr       _toupper
0800137A  584F      2387          addq.w    #4,A7
0800137C  2042      2388          move.l    D2,A0
0800137E  1080      2389          move.b    D0,(A0)
08001380  5282      2390          addq.l    #1,D2
08001382  60E2      2391          bra       vsprintf_54
                    2392   vsprintf_56:
08001384  7E00      2393          moveq     #0,D7
08001386  41EE FFD4 2394          lea       -44(A6),A0
0800138A  2408      2395          move.l    A0,D2
0800138C  206E 000C 2396          move.l    12(A6),A0
08001390  1010      2397          move.b    (A0),D0
08001392  4880      2398          ext.w     D0
08001394  48C0      2399          ext.l     D0
08001396  0C80 0000 2400          cmp.l     #100,D0
0800139A  0064      
0800139C  6714      2401          beq.s     vsprintf_59
0800139E  206E 000C 2402          move.l    12(A6),A0
080013A2  1010      2403          move.b    (A0),D0
080013A4  4880      2404          ext.w     D0
080013A6  48C0      2405          ext.l     D0
080013A8  0C80 0000 2406          cmp.l     #105,D0
080013AC  0069      
080013AE  6600 0076 2407          bne       vsprintf_65
                    2408   vsprintf_59:
080013B2  4A2E FFCE 2409          tst.b     -50(A6)
080013B6  6612      2410          bne.s     vsprintf_62
080013B8  2043      2411          move.l    D3,A0
080013BA  1010      2412          move.b    (A0),D0
080013BC  4880      2413          ext.w     D0
080013BE  48C0      2414          ext.l     D0
080013C0  0C80 0000 2415          cmp.l     #45,D0
080013C4  002D      
080013C6  6600 002E 2416          bne       vsprintf_60
                    2417   vsprintf_62:
080013CA  2043      2418          move.l    D3,A0
080013CC  1010      2419          move.b    (A0),D0
080013CE  4880      2420          ext.w     D0
080013D0  48C0      2421          ext.l     D0
080013D2  0C80 0000 2422          cmp.l     #45,D0
080013D6  002D      
080013D8  660E      2423          bne.s     vsprintf_63
080013DA  2043      2424          move.l    D3,A0
080013DC  5283      2425          addq.l    #1,D3
080013DE  2242      2426          move.l    D2,A1
080013E0  5282      2427          addq.l    #1,D2
080013E2  1290      2428          move.b    (A0),(A1)
080013E4  5304      2429          subq.b    #1,D4
080013E6  6008      2430          bra.s     vsprintf_64
                    2431   vsprintf_63:
080013E8  2042      2432          move.l    D2,A0
080013EA  5282      2433          addq.l    #1,D2
080013EC  10BC 002B 2434          move.b    #43,(A0)
                    2435   vsprintf_64:
080013F0  5287      2436          addq.l    #1,D7
080013F2  6000 0032 2437          bra       vsprintf_65
                    2438   vsprintf_60:
080013F6  4A2E FFCF 2439          tst.b     -49(A6)
080013FA  6700 002A 2440          beq       vsprintf_65
080013FE  2043      2441          move.l    D3,A0
08001400  1010      2442          move.b    (A0),D0
08001402  4880      2443          ext.w     D0
08001404  48C0      2444          ext.l     D0
08001406  0C80 0000 2445          cmp.l     #45,D0
0800140A  002D      
0800140C  660E      2446          bne.s     vsprintf_67
0800140E  2043      2447          move.l    D3,A0
08001410  5283      2448          addq.l    #1,D3
08001412  2242      2449          move.l    D2,A1
08001414  5282      2450          addq.l    #1,D2
08001416  1290      2451          move.b    (A0),(A1)
08001418  5304      2452          subq.b    #1,D4
0800141A  6008      2453          bra.s     vsprintf_68
                    2454   vsprintf_67:
0800141C  2042      2455          move.l    D2,A0
0800141E  5282      2456          addq.l    #1,D2
08001420  10BC 0020 2457          move.b    #32,(A0)
                    2458   vsprintf_68:
08001424  5287      2459          addq.l    #1,D7
                    2460   vsprintf_65:
08001426  4A2E FFD0 2461          tst.b     -48(A6)
0800142A  6700 0066 2462          beq       vsprintf_77
0800142E  206E 000C 2463          move.l    12(A6),A0
08001432  1010      2464          move.b    (A0),D0
08001434  4880      2465          ext.w     D0
08001436  48C0      2466          ext.l     D0
08001438  0C80 0000 2467          cmp.l     #111,D0
0800143C  006F      
0800143E  671A      2468          beq.s     vsprintf_73
08001440  6E0C      2469          bgt.s     vsprintf_76
08001442  0C80 0000 2470          cmp.l     #88,D0
08001446  0058      
08001448  6710      2471          beq.s     vsprintf_73
0800144A  6000 0046 2472          bra       vsprintf_77
                    2473   vsprintf_76:
0800144E  0C80 0000 2474          cmp.l     #120,D0
08001452  0078      
08001454  6704      2475          beq.s     vsprintf_73
08001456  6000 003A 2476          bra       vsprintf_77
                    2477   vsprintf_73:
0800145A  2042      2478          move.l    D2,A0
0800145C  5282      2479          addq.l    #1,D2
0800145E  10BC 0030 2480          move.b    #48,(A0)
08001462  5287      2481          addq.l    #1,D7
08001464  206E 000C 2482          move.l    12(A6),A0
08001468  1010      2483          move.b    (A0),D0
0800146A  4880      2484          ext.w     D0
0800146C  48C0      2485          ext.l     D0
0800146E  0C80 0000 2486          cmp.l     #120,D0
08001472  0078      
08001474  6712      2487          beq.s     vsprintf_79
08001476  206E 000C 2488          move.l    12(A6),A0
0800147A  1010      2489          move.b    (A0),D0
0800147C  4880      2490          ext.w     D0
0800147E  48C0      2491          ext.l     D0
08001480  0C80 0000 2492          cmp.l     #88,D0
08001484  0058      
08001486  660A      2493          bne.s     vsprintf_77
                    2494   vsprintf_79:
08001488  2042      2495          move.l    D2,A0
0800148A  5282      2496          addq.l    #1,D2
0800148C  10BC 0078 2497          move.b    #120,(A0)
08001490  5287      2498          addq.l    #1,D7
                    2499   vsprintf_77:
08001492  2042      2500          move.l    D2,A0
08001494  4210      2501          clr.b     (A0)
08001496  206E 000C 2502          move.l    12(A6),A0
0800149A  1010      2503          move.b    (A0),D0
0800149C  4880      2504          ext.w     D0
0800149E  48C0      2505          ext.l     D0
080014A0  0C80 0000 2506          cmp.l     #105,D0
080014A4  0069      
080014A6  6700 0076 2507          beq       vsprintf_82
080014AA  6E42      2508          bgt.s     vsprintf_93
080014AC  0C80 0000 2509          cmp.l     #99,D0
080014B0  0063      
080014B2  6700 0084 2510          beq       vsprintf_96
080014B6  6E1C      2511          bgt.s     vsprintf_94
080014B8  0C80 0000 2512          cmp.l     #88,D0
080014BC  0058      
080014BE  6700 005E 2513          beq       vsprintf_82
080014C2  6E00 0184 2514          bgt       vsprintf_80
080014C6  0C80 0000 2515          cmp.l     #69,D0
080014CA  0045      
080014CC  6700 0050 2516          beq       vsprintf_82
080014D0  6000 0176 2517          bra       vsprintf_80
                    2518   vsprintf_94:
080014D4  0C80 0000 2519          cmp.l     #101,D0
080014D8  0065      
080014DA  6700 0042 2520          beq       vsprintf_82
080014DE  6E00 0168 2521          bgt       vsprintf_80
080014E2  0C80 0000 2522          cmp.l     #100,D0
080014E6  0064      
080014E8  6734      2523          beq.s     vsprintf_82
080014EA  6000 015C 2524          bra       vsprintf_80
                    2525   vsprintf_93:
080014EE  0C80 0000 2526          cmp.l     #117,D0
080014F2  0075      
080014F4  6728      2527          beq.s     vsprintf_82
080014F6  6E1A      2528          bgt.s     vsprintf_95
080014F8  0C80 0000 2529          cmp.l     #115,D0
080014FC  0073      
080014FE  6700 0038 2530          beq       vsprintf_96
08001502  6E00 0144 2531          bgt       vsprintf_80
08001506  0C80 0000 2532          cmp.l     #111,D0
0800150A  006F      
0800150C  6710      2533          beq.s     vsprintf_82
0800150E  6000 0138 2534          bra       vsprintf_80
                    2535   vsprintf_95:
08001512  0C80 0000 2536          cmp.l     #120,D0
08001516  0078      
08001518  6704      2537          beq.s     vsprintf_82
0800151A  6000 012C 2538          bra       vsprintf_80
                    2539   vsprintf_82:
0800151E  4A2E FFD2 2540          tst.b     -46(A6)
08001522  6714      2541          beq.s     vsprintf_96
08001524  4A2E FFCD 2542          tst.b     -51(A6)
08001528  660E      2543          bne.s     vsprintf_96
0800152A  200D      2544          move.l    A5,D0
0800152C  9087      2545          sub.l     D7,D0
0800152E  4884      2546          ext.w     D4
08001530  48C4      2547          ext.l     D4
08001532  9084      2548          sub.l     D4,D0
08001534  2D40 FFFC 2549          move.l    D0,-4(A6)
                    2550   vsprintf_96:
08001538  202E FFFC 2551          move.l    -4(A6),D0
0800153C  0C80 0000 2552          cmp.l     #0,D0
08001540  0000      
08001542  6C04      2553          bge.s     vsprintf_98
08001544  42AE FFFC 2554          clr.l     -4(A6)
                    2555   vsprintf_98:
08001548  4A2E FFCD 2556          tst.b     -51(A6)
0800154C  6600 0030 2557          bne       vsprintf_104
08001550  4884      2558          ext.w     D4
08001552  48C4      2559          ext.l     D4
08001554  2004      2560          move.l    D4,D0
08001556  D0AE FFFC 2561          add.l     -4(A6),D0
0800155A  D087      2562          add.l     D7,D0
0800155C  1D40 FFD1 2563          move.b    D0,-47(A6)
                    2564   vsprintf_102:
08001560  102E FFD1 2565          move.b    -47(A6),D0
08001564  4880      2566          ext.w     D0
08001566  48C0      2567          ext.l     D0
08001568  220D      2568          move.l    A5,D1
0800156A  534D      2569          subq.w    #1,A5
0800156C  B081      2570          cmp.l     D1,D0
0800156E  6C0E      2571          bge.s     vsprintf_104
08001570  4878 0020 2572          pea       32
08001574  2F0A      2573          move.l    A2,-(A7)
08001576  4E93      2574          jsr       (A3)
08001578  504F      2575          addq.w    #8,A7
0800157A  5286      2576          addq.l    #1,D6
0800157C  60E2      2577          bra       vsprintf_102
                    2578   vsprintf_104:
0800157E  41EE FFD4 2579          lea       -44(A6),A0
08001582  2408      2580          move.l    A0,D2
                    2581   vsprintf_105:
08001584  2042      2582          move.l    D2,A0
08001586  4A10      2583          tst.b     (A0)
08001588  6716      2584          beq.s     vsprintf_107
0800158A  2042      2585          move.l    D2,A0
0800158C  5282      2586          addq.l    #1,D2
0800158E  1210      2587          move.b    (A0),D1
08001590  4881      2588          ext.w     D1
08001592  48C1      2589          ext.l     D1
08001594  2F01      2590          move.l    D1,-(A7)
08001596  2F0A      2591          move.l    A2,-(A7)
08001598  4E93      2592          jsr       (A3)
0800159A  504F      2593          addq.w    #8,A7
0800159C  5286      2594          addq.l    #1,D6
0800159E  60E4      2595          bra       vsprintf_105
                    2596   vsprintf_107:
080015A0  202E FFFC 2597          move.l    -4(A6),D0
080015A4  1D40 FFD1 2598          move.b    D0,-47(A6)
                    2599   vsprintf_108:
080015A8  102E FFD1 2600          move.b    -47(A6),D0
080015AC  532E FFD1 2601          subq.b    #1,-47(A6)
080015B0  4A00      2602          tst.b     D0
080015B2  670E      2603          beq.s     vsprintf_110
080015B4  4878 0030 2604          pea       48
080015B8  2F0A      2605          move.l    A2,-(A7)
080015BA  4E93      2606          jsr       (A3)
080015BC  504F      2607          addq.w    #8,A7
080015BE  5286      2608          addq.l    #1,D6
080015C0  60E6      2609          bra       vsprintf_108
                    2610   vsprintf_110:
080015C2  2043      2611          move.l    D3,A0
080015C4  4A10      2612          tst.b     (A0)
080015C6  6700 0048 2613          beq       vsprintf_113
080015CA  206E 000C 2614          move.l    12(A6),A0
080015CE  1010      2615          move.b    (A0),D0
080015D0  4880      2616          ext.w     D0
080015D2  48C0      2617          ext.l     D0
080015D4  0C80 0000 2618          cmp.l     #115,D0
080015D8  0073      
080015DA  670C      2619          beq.s     vsprintf_116
080015DC  6E18      2620          bgt.s     vsprintf_119
080015DE  0C80 0000 2621          cmp.l     #99,D0
080015E2  0063      
080015E4  6702      2622          beq.s     vsprintf_116
080015E6  600E      2623          bra.s     vsprintf_119
                    2624   vsprintf_116:
080015E8  2005      2625          move.l    D5,D0
080015EA  5385      2626          subq.l    #1,D5
080015EC  0C80 0000 2627          cmp.l     #0,D0
080015F0  0000      
080015F2  6E02      2628          bgt.s     vsprintf_119
080015F4  6016      2629          bra.s     vsprintf_115
                    2630   vsprintf_119:
080015F6  2043      2631          move.l    D3,A0
080015F8  5283      2632          addq.l    #1,D3
080015FA  1210      2633          move.b    (A0),D1
080015FC  4881      2634          ext.w     D1
080015FE  48C1      2635          ext.l     D1
08001600  2F01      2636          move.l    D1,-(A7)
08001602  2F0A      2637          move.l    A2,-(A7)
08001604  4E93      2638          jsr       (A3)
08001606  504F      2639          addq.w    #8,A7
08001608  5286      2640          addq.l    #1,D6
0800160A  6002      2641          bra.s     vsprintf_112
                    2642   vsprintf_115:
0800160C  6002      2643          bra.s     vsprintf_113
                    2644   vsprintf_112:
0800160E  60B2      2645          bra       vsprintf_110
                    2646   vsprintf_113:
08001610  4A2E FFCD 2647          tst.b     -51(A6)
08001614  6700 0030 2648          beq       vsprintf_125
08001618  4884      2649          ext.w     D4
0800161A  48C4      2650          ext.l     D4
0800161C  2004      2651          move.l    D4,D0
0800161E  D0AE FFFC 2652          add.l     -4(A6),D0
08001622  D087      2653          add.l     D7,D0
08001624  1D40 FFD1 2654          move.b    D0,-47(A6)
                    2655   vsprintf_123:
08001628  102E FFD1 2656          move.b    -47(A6),D0
0800162C  4880      2657          ext.w     D0
0800162E  48C0      2658          ext.l     D0
08001630  220D      2659          move.l    A5,D1
08001632  534D      2660          subq.w    #1,A5
08001634  B081      2661          cmp.l     D1,D0
08001636  6C0E      2662          bge.s     vsprintf_125
08001638  4878 0020 2663          pea       32
0800163C  2F0A      2664          move.l    A2,-(A7)
0800163E  4E93      2665          jsr       (A3)
08001640  504F      2666          addq.w    #8,A7
08001642  5386      2667          subq.l    #1,D6
08001644  60E2      2668          bra       vsprintf_123
                    2669   vsprintf_125:
08001646  6014      2670          bra.s     vsprintf_81
                    2671   vsprintf_80:
08001648  206E 000C 2672          move.l    12(A6),A0
0800164C  1210      2673          move.b    (A0),D1
0800164E  4881      2674          ext.w     D1
08001650  48C1      2675          ext.l     D1
08001652  2F01      2676          move.l    D1,-(A7)
08001654  2F0A      2677          move.l    A2,-(A7)
08001656  4E93      2678          jsr       (A3)
08001658  504F      2679          addq.w    #8,A7
0800165A  5286      2680          addq.l    #1,D6
                    2681   vsprintf_81:
0800165C  52AE 000C 2682          addq.l    #1,12(A6)
                    2683   vsprintf_2:
08001660  6000 F9D6 2684          bra       vsprintf_1
                    2685   vsprintf_3:
08001664  4A92      2686          tst.l     (A2)
08001666  6710      2687          beq.s     vsprintf_126
08001668  4201      2688          clr.b     D1
0800166A  C2BC 0000 2689          and.l     #255,D1
0800166E  00FF      
08001670  2F01      2690          move.l    D1,-(A7)
08001672  2F0A      2691          move.l    A2,-(A7)
08001674  4E93      2692          jsr       (A3)
08001676  504F      2693          addq.w    #8,A7
                    2694   vsprintf_126:
08001678  2006      2695          move.l    D6,D0
0800167A  4CDF 3CFC 2696          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
0800167E  4E5E      2697          unlk      A6
08001680  4E75      2698          rts
                    2699   @itoa_convert:
08001682  4E56 0000 2700          link      A6,#0
08001686  48E7 3C00 2701          movem.l   D2/D3/D4/D5,-(A7)
0800168A  242E 0008 2702          move.l    8(A6),D2
0800168E  262E 0010 2703          move.l    16(A6),D3
08001692  2A2E 000C 2704          move.l    12(A6),D5
08001696  2F05      2705          move.l    D5,-(A7)
08001698  2F03      2706          move.l    D3,-(A7)
0800169A  6100 F720 2707          bsr       ULDIV
0800169E  202F 0004 2708          move.l    4(A7),D0
080016A2  504F      2709          addq.w    #8,A7
080016A4  2800      2710          move.l    D0,D4
080016A6  BA83      2711          cmp.l     D3,D5
080016A8  651A      2712          blo.s     @itoa_convert_1
080016AA  2F03      2713          move.l    D3,-(A7)
080016AC  2F05      2714          move.l    D5,-(A7)
080016AE  2F03      2715          move.l    D3,-(A7)
080016B0  6100 F70A 2716          bsr       ULDIV
080016B4  2217      2717          move.l    (A7),D1
080016B6  504F      2718          addq.w    #8,A7
080016B8  2F01      2719          move.l    D1,-(A7)
080016BA  2F02      2720          move.l    D2,-(A7)
080016BC  61C4      2721          bsr       @itoa_convert
080016BE  DEFC 000C 2722          add.w     #12,A7
080016C2  2400      2723          move.l    D0,D2
                    2724   @itoa_convert_1:
080016C4  0C84 0000 2725          cmp.l     #9,D4
080016C8  0009      
080016CA  6E0A      2726          bgt.s     @itoa_convert_3
080016CC  2004      2727          move.l    D4,D0
080016CE  0680 0000 2728          add.l     #48,D0
080016D2  0030      
080016D4  600E      2729          bra.s     @itoa_convert_4
                    2730   @itoa_convert_3:
080016D6  2004      2731          move.l    D4,D0
080016D8  0680 0000 2732          add.l     #97,D0
080016DC  0061      
080016DE  0480 0000 2733          sub.l     #10,D0
080016E2  000A      
                    2734   @itoa_convert_4:
080016E4  2042      2735          move.l    D2,A0
080016E6  1080      2736          move.b    D0,(A0)
080016E8  2002      2737          move.l    D2,D0
080016EA  5280      2738          addq.l    #1,D0
080016EC  4CDF 003C 2739          movem.l   (A7)+,D2/D3/D4/D5
080016F0  4E5E      2740          unlk      A6
080016F2  4E75      2741          rts
                    2742   _ltoa:
080016F4  4E56 0000 2743          link      A6,#0
080016F8  48E7 3C00 2744          movem.l   D2/D3/D4/D5,-(A7)
080016FC  242E 0008 2745          move.l    8(A6),D2
08001700  262E 000C 2746          move.l    12(A6),D3
08001704  2A2E 0010 2747          move.l    16(A6),D5
08001708  2803      2748          move.l    D3,D4
0800170A  0C85 0000 2749          cmp.l     #2,D5
0800170E  0002      
08001710  6D08      2750          blt.s     ltoa_3
08001712  0C85 0000 2751          cmp.l     #36,D5
08001716  0024      
08001718  6F06      2752          ble.s     ltoa_1
                    2753   ltoa_3:
0800171A  2003      2754          move.l    D3,D0
0800171C  6000 0052 2755          bra       ltoa_4
                    2756   ltoa_1:
08001720  0C85 0000 2757          cmp.l     #10,D5
08001724  000A      
08001726  6600 0032 2758          bne       ltoa_5
0800172A  0C82 0000 2759          cmp.l     #0,D2
0800172E  0000      
08001730  6C28      2760          bge.s     ltoa_5
08001732  2002      2761          move.l    D2,D0
08001734  4480      2762          neg.l     D0
08001736  2400      2763          move.l    D0,D2
08001738  0C82 0000 2764          cmp.l     #0,D2
0800173C  0000      
0800173E  6C12      2765          bge.s     ltoa_7
08001740  4879 0800 2766          pea       @itoa_1
08001744  2024      
08001746  2F03      2767          move.l    D3,-(A7)
08001748  6100 00FE 2768          bsr       _strcpy
0800174C  504F      2769          addq.w    #8,A7
0800174E  2003      2770          move.l    D3,D0
08001750  601E      2771          bra.s     ltoa_4
                    2772   ltoa_7:
08001752  2044      2773          move.l    D4,A0
08001754  5284      2774          addq.l    #1,D4
08001756  10BC 002D 2775          move.b    #45,(A0)
                    2776   ltoa_5:
0800175A  2F05      2777          move.l    D5,-(A7)
0800175C  2F02      2778          move.l    D2,-(A7)
0800175E  2F04      2779          move.l    D4,-(A7)
08001760  6100 FF20 2780          bsr       @itoa_convert
08001764  DEFC 000C 2781          add.w     #12,A7
08001768  2800      2782          move.l    D0,D4
0800176A  2044      2783          move.l    D4,A0
0800176C  4210      2784          clr.b     (A0)
0800176E  2003      2785          move.l    D3,D0
                    2786   ltoa_4:
08001770  4CDF 003C 2787          movem.l   (A7)+,D2/D3/D4/D5
08001774  4E5E      2788          unlk      A6
08001776  4E75      2789          rts
                    2790   _ultoa:
08001778  4E56 0000 2791          link      A6,#0
0800177C  48E7 3800 2792          movem.l   D2/D3/D4,-(A7)
08001780  262E 0010 2793          move.l    16(A6),D3
08001784  282E 000C 2794          move.l    12(A6),D4
08001788  2404      2795          move.l    D4,D2
0800178A  0C83 0000 2796          cmp.l     #2,D3
0800178E  0002      
08001790  6D08      2797          blt.s     ultoa_3
08001792  0C83 0000 2798          cmp.l     #36,D3
08001796  0024      
08001798  6F04      2799          ble.s     ultoa_1
                    2800   ultoa_3:
0800179A  2004      2801          move.l    D4,D0
0800179C  6018      2802          bra.s     ultoa_4
                    2803   ultoa_1:
0800179E  2F03      2804          move.l    D3,-(A7)
080017A0  2F2E 0008 2805          move.l    8(A6),-(A7)
080017A4  2F02      2806          move.l    D2,-(A7)
080017A6  6100 FEDA 2807          bsr       @itoa_convert
080017AA  DEFC 000C 2808          add.w     #12,A7
080017AE  2400      2809          move.l    D0,D2
080017B0  2042      2810          move.l    D2,A0
080017B2  4210      2811          clr.b     (A0)
080017B4  2004      2812          move.l    D4,D0
                    2813   ultoa_4:
080017B6  4CDF 001C 2814          movem.l   (A7)+,D2/D3/D4
080017BA  4E5E      2815          unlk      A6
080017BC  4E75      2816          rts
                    2817   _itoa:
080017BE  4E56 0000 2818          link      A6,#0
080017C2  2F2E 0010 2819          move.l    16(A6),-(A7)
080017C6  2F2E 000C 2820          move.l    12(A6),-(A7)
080017CA  2F2E 0008 2821          move.l    8(A6),-(A7)
080017CE  6100 FF24 2822          bsr       _ltoa
080017D2  DEFC 000C 2823          add.w     #12,A7
080017D6  4E5E      2824          unlk      A6
080017D8  4E75      2825          rts
                    2826   _strlen:
080017DA  206F 0004 2827          move.l    (4,A7),A0
080017DE  2248      2828          move.l    A0,A1
                    2829   strlen_1:
080017E0  4A19      2830          tst.b     (A1)+
080017E2  66FC      2831          bne       strlen_1
080017E4  2009      2832          move.l    A1,D0
080017E6  9088      2833          sub.l     A0,D0
080017E8  5380      2834          subq.l    #1,D0
080017EA  4E75      2835          rts
                    2836   _putch:
080017EC  4E56 0000 2837          link      A6,#0
080017F0  48E7 2000 2838          movem.l   D2,-(A7)
080017F4  242E 0008 2839          move.l    8(A6),D2
080017F8  0C82 0000 2840          cmp.l     #10,D2
080017FC  000A      
080017FE  660A      2841          bne.s     putch_1
08001800  4878 000D 2842          pea       13
08001804  6100 E862 2843          bsr       __putch
08001808  584F      2844          addq.w    #4,A7
                    2845   putch_1:
0800180A  2F02      2846          move.l    D2,-(A7)
0800180C  6100 E85A 2847          bsr       __putch
08001810  584F      2848          addq.w    #4,A7
08001812  2002      2849          move.l    D2,D0
08001814  4CDF 0004 2850          movem.l   (A7)+,D2
08001818  4E5E      2851          unlk      A6
0800181A  4E75      2852          rts
                    2853   _toupper:
0800181C  4E56 0000 2854          link      A6,#0
08001820  48E7 2000 2855          movem.l   D2,-(A7)
08001824  242E 0008 2856          move.l    8(A6),D2
08001828  0C82 0000 2857          cmp.l     #97,D2
0800182C  0061      
0800182E  6D0E      2858          blt.s     toupper_1
08001830  0C82 0000 2859          cmp.l     #122,D2
08001834  007A      
08001836  6E06      2860          bgt.s     toupper_1
08001838  C4BC 0000 2861          and.l     #95,D2
0800183C  005F      
                    2862   toupper_1:
0800183E  2002      2863          move.l    D2,D0
08001840  4CDF 0004 2864          movem.l   (A7)+,D2
08001844  4E5E      2865          unlk      A6
08001846  4E75      2866          rts
                    2867   _strcpy:
08001848  206F 0004 2868          move.l    (4,A7),A0
0800184C  226F 0008 2869          move.l    (8,A7),A1
08001850  2008      2870          move.l    A0,D0
                    2871   strcpy_1:
08001852  10D9      2872          move.b    (A1)+,(A0)+
08001854  66FC      2873          bne       strcpy_1
08001856  4E75      2874          rts
                    2875          section   const
08001858            2876                   align
                    2877   
                    2878   
                    2879   @lab3_p~1_1:
08001858  0D0A 5468 2880          dc.b      13,10,84,104,101,32,100,97,116,97,32,98,121
0800185C  6520 6461 
08001860  7461 2062 
08001864  79        
08001865  7465 2072 2881          dc.b      116,101,32,114,101,97,100,32,105,115,32,37,120
08001869  6561 6420 
0800186D  6973 2025 
08001871  78        
08001872  00        2882          dc.b      0
                    2883   @lab3_p~1_2:
08001874  0D0A 4C6F 2884          dc.b      13,10,76,111,119,101,114,32,97,100,100,114,101
08001878  7765 7220 
0800187C  6164 6472 
08001880  65        
08001881  7373 2063 2885          dc.b      115,115,32,99,111,117,110,116,58,32,37,100,0
08001885  6F75 6E74 
08001889  3A20 2564 
0800188D  00        
                    2886   @lab3_p~1_3:
0800188E  0D0A 5265 2887          dc.b      13,10,82,101,109,97,105,110,105,110,103,32,98
08001892  6D61 696E 
08001896  696E 6720 
0800189A  62        
0800189B  7974 6573 2888          dc.b      121,116,101,115,32,102,111,114,32,76,111,119
0800189F  2066 6F72 
080018A3  204C 6F77 
080018A7  6572 2061 2889          dc.b      101,114,32,97,100,100,114,101,115,115,58,32
080018AB  6464 7265 
080018AF  7373 3A20 
080018B3  2564 00   2890          dc.b      37,100,0
                    2891   @lab3_p~1_4:
080018B6  0D0A 5570 2892          dc.b      13,10,85,112,112,101,114,32,97,100,100,114,101
080018BA  7065 7220 
080018BE  6164 6472 
080018C2  65        
080018C3  7373 2063 2893          dc.b      115,115,32,99,111,117,110,116,58,32,37,100,0
080018C7  6F75 6E74 
080018CB  3A20 2564 
080018CF  00        
                    2894   @lab3_p~1_5:
080018D0  0D0A 5265 2895          dc.b      13,10,82,101,109,97,105,110,105,110,103,32,98
080018D4  6D61 696E 
080018D8  696E 6720 
080018DC  62        
080018DD  7974 6573 2896          dc.b      121,116,101,115,32,102,111,114,32,85,112,112
080018E1  2066 6F72 
080018E5  2055 7070 
080018E9  6572 2061 2897          dc.b      101,114,32,97,100,100,114,101,115,115,58,32
080018ED  6464 7265 
080018F1  7373 3A20 
080018F5  2564 00   2898          dc.b      37,100,0
                    2899   @lab3_p~1_6:
080018F8  0D0A 4C6F 2900          dc.b      13,10,76,111,119,101,114,32,97,100,100,114,101
080018FC  7765 7220 
08001900  6164 6472 
08001904  65        
08001905  7373 2069 2901          dc.b      115,115,32,105,110,105,116,105,97,108,32,112
08001909  6E69 7469 
0800190D  616C 2070 
08001911  6167 6520 2902          dc.b      97,103,101,32,102,105,108,108,58,32,37,100,0
08001915  6669 6C6C 
08001919  3A20 2564 
0800191D  00        
                    2903   @lab3_p~1_7:
0800191E  0D0A 5570 2904          dc.b      13,10,85,112,112,101,114,32,97,100,100,114,101
08001922  7065 7220 
08001926  6164 6472 
0800192A  65        
0800192B  7373 2069 2905          dc.b      115,115,32,105,110,105,116,105,97,108,32,112
0800192F  6E69 7469 
08001933  616C 2070 
08001937  6167 6520 2906          dc.b      97,103,101,32,102,105,108,108,58,32,37,100,0
0800193B  6669 6C6C 
0800193F  3A20 2564 
08001943  00        
                    2907   @lab3_p~1_8:
08001944  0D0A 5061 2908          dc.b      13,10,80,97,103,101,32,119,114,105,116,101,115
08001948  6765 2077 
0800194C  7269 7465 
08001950  73        
08001951  3A20 2564 2909          dc.b      58,32,37,100,0
08001955  00        
                    2910   @lab3_p~1_9:
08001956  0D0A 496E 2911          dc.b      13,10,73,110,100,105,118,105,100,117,97,108
0800195A  6469 7669 
0800195E  6475 616C 
08001962  2077 7269 2912          dc.b      32,119,114,105,116,101,115,58,32,37,100,0
08001966  7465 733A 
0800196A  2025 6400 
                    2913   @lab3_p~1_10:
0800196E  0D0A 4649 2914          dc.b      13,10,70,73,76,76,83,32,85,80,32,82,69,77,65
08001972  4C4C 5320 
08001976  5550 2052 
0800197A  454D 41   
0800197D  494E 4445 2915          dc.b      73,78,68,69,82,32,79,70,32,66,76,79,67,75,32
08001981  5220 4F46 
08001985  2042 4C4F 
08001989  434B 20   
0800198C  2564 2C20 2916          dc.b      37,100,44,32,84,72,69,78,32,83,87,73,84,67,72
08001990  5448 454E 
08001994  2053 5749 
08001998  5443 48   
0800199B  4553 2042 2917          dc.b      69,83,32,66,76,79,67,75,0
0800199F  4C4F 434B 
080019A3  00        
                    2918   @lab3_p~1_11:
080019A4  0D0A 4649 2919          dc.b      13,10,70,73,76,76,83,32,85,80,32,66,76,79,67
080019A8  4C4C 5320 
080019AC  5550 2042 
080019B0  4C4F 43   
080019B3  4B20 2564 2920          dc.b      75,32,37,100,44,32,84,72,69,78,32,83,87,73,84
080019B7  2C20 5448 
080019BB  454E 2053 
080019BF  5749 54   
080019C2  4348 4553 2921          dc.b      67,72,69,83,32,66,76,79,67,75,0
080019C6  2042 4C4F 
080019CA  434B 00   
                    2922   @lab3_p~1_12:
080019CE  0D0A 496E 2923          dc.b      13,10,73,110,100,105,119,114,105,116,101,110
080019D2  6469 7772 
080019D6  6974 656E 
080019DA  756D 6265 2924          dc.b      117,109,98,101,114,58,32,37,100,0
080019DE  723A 2025 
080019E2  6400      
                    2925   @lab3_p~1_13:
080019E4  0D0A 436F 2926          dc.b      13,10,67,111,117,110,116,58,32,37,100,0
080019E8  756E 743A 
080019EC  2025 6400 
                    2927   @lab3_p~1_14:
080019F0  0D0A 5265 2928          dc.b      13,10,82,101,109,97,105,110,105,110,103,32,98
080019F4  6D61 696E 
080019F8  696E 6720 
080019FC  62        
080019FD  7974 6573 2929          dc.b      121,116,101,115,58,32,37,100,0
08001A01  3A20 2564 
08001A05  00        
                    2930   @lab3_p~1_15:
08001A06  0D0A 4C6F 2931          dc.b      13,10,76,111,119,101,114,32,97,100,100,114,101
08001A0A  7765 7220 
08001A0E  6164 6472 
08001A12  65        
08001A13  7373 3A20 2932          dc.b      115,115,58,32,37,120,0
08001A17  2578 00   
                    2933   @lab3_p~1_16:
08001A1A  0D0A 4669 2934          dc.b      13,10,70,105,108,108,32,114,101,115,116,32,111
08001A1E  6C6C 2072 
08001A22  6573 7420 
08001A26  6F        
08001A27  6620 7468 2935          dc.b      102,32,116,104,101,32,119,114,105,116,101,32
08001A2B  6520 7772 
08001A2F  6974 6520 
08001A33  696E 2074 2936          dc.b      105,110,32,116,104,101,32,112,97,103,101,0
08001A37  6865 2070 
08001A3B  6167 6500 
                    2937   @lab3_p~1_17:
08001A40  0D0A 4669 2938          dc.b      13,10,70,105,108,108,32,114,101,115,116,32,111
08001A44  6C6C 2072 
08001A48  6573 7420 
08001A4C  6F        
08001A4D  6620 7468 2939          dc.b      102,32,116,104,101,32,119,114,105,116,101,32
08001A51  6520 7772 
08001A55  6974 6520 
08001A59  696E 2074 2940          dc.b      105,110,32,116,104,101,32,112,97,103,101,32
08001A5D  6865 2070 
08001A61  6167 6520 
08001A65  616E 6420 2941          dc.b      97,110,100,32,116,104,101,32,114,101,115,116
08001A69  7468 6520 
08001A6D  7265 7374 
08001A71  2069 6E20 2942          dc.b      32,105,110,32,116,104,101,32,114,101,109,97
08001A75  7468 6520 
08001A79  7265 6D61 
08001A7D  696E 696E 2943          dc.b      105,110,105,110,103,32,105,110,32,110,101,120
08001A81  6720 696E 
08001A85  206E 6578 
08001A89  7420 7061 2944          dc.b      116,32,112,97,103,101,0
08001A8D  6765 00   
                    2945   @lab3_p~1_18:
08001A90  0D0A 496E 2946          dc.b      13,10,73,110,105,116,105,97,108,32,73,116,101
08001A94  6974 6961 
08001A98  6C20 4974 
08001A9C  65        
08001A9D  7261 7469 2947          dc.b      114,97,116,105,111,110,115,58,32,37,100,0
08001AA1  6F6E 733A 
08001AA5  2025 6400 
                    2948   @lab3_p~1_19:
08001AAA  0D0A 496E 2949          dc.b      13,10,73,110,105,116,105,97,108,32,82,101,97
08001AAE  6974 6961 
08001AB2  6C20 5265 
08001AB6  61        
08001AB7  644E 756D 2950          dc.b      100,78,117,109,58,32,37,100,0
08001ABB  3A20 2564 
08001ABF  00        
                    2951   @lab3_p~1_20:
08001AC0  0D0A 424C 2952          dc.b      13,10,66,76,79,67,75,32,83,87,73,84,67,72,58
08001AC4  4F43 4B20 
08001AC8  5357 4954 
08001ACC  4348 3A   
08001ACF  2062 6C6F 2953          dc.b      32,98,108,111,99,107,32,105,115,32,110,111,119
08001AD3  636B 2069 
08001AD7  7320 6E6F 
08001ADB  77        
08001ADC  2025 6400 2954          dc.b      32,37,100,0
                    2955   @lab3_p~1_21:
08001AE0  0D0A 5661 2956          dc.b      13,10,86,97,108,117,101,32,111,102,32,80,72
08001AE4  6C75 6520 
08001AE8  6F66 2050 
08001AEC  48        
08001AED  4F54 4F52 2957          dc.b      79,84,79,82,69,83,73,83,84,79,82,58,37,120,0
08001AF1  4553 4953 
08001AF5  544F 523A 
08001AF9  2578 00   
                    2958   @lab3_p~1_22:
08001AFC  0D0A 5661 2959          dc.b      13,10,86,97,108,117,101,32,111,102,32,84,72
08001B00  6C75 6520 
08001B04  6F66 2054 
08001B08  48        
08001B09  4552 4D49 2960          dc.b      69,82,77,73,83,84,79,82,58,37,120,0
08001B0D  5354 4F52 
08001B11  3A25 7800 
                    2961   @lab3_p~1_23:
08001B16  0D0A 5661 2962          dc.b      13,10,86,97,108,117,101,32,111,102,32,80,79
08001B1A  6C75 6520 
08001B1E  6F66 2050 
08001B22  4F        
08001B23  5445 4E54 2963          dc.b      84,69,78,84,73,79,77,69,84,69,82,58,37,120,0
08001B27  494F 4D45 
08001B2B  5445 523A 
08001B2F  2578 00   
                    2964   @lab3_p~1_24:
08001B32  0D0A 2A2A 2965          dc.b      13,10,42,42,42,42,42,42,42,42,42,42,42,42,42
08001B36  2A2A 2A2A 
08001B3A  2A2A 2A2A 
08001B3E  2A2A 2A   
08001B41  2A2A 2A2A 2966          dc.b      42,42,42,42,42,42,42,42,42,42,42,42,42,42,42
08001B45  2A2A 2A2A 
08001B49  2A2A 2A2A 
08001B4D  2A2A 2A   
08001B50  2A2A 2A2A 2967          dc.b      42,42,42,42,42,42,42,42,42,0
08001B54  2A2A 2A2A 
08001B58  2A00      
                    2968   @lab3_p~1_25:
08001B5A  0D0A 5765 2969          dc.b      13,10,87,101,108,99,111,109,101,32,116,111,32
08001B5E  6C63 6F6D 
08001B62  6520 746F 
08001B66  20        
08001B67  4545 5052 2970          dc.b      69,69,80,82,79,77,32,97,110,100,32,65,68,67
08001B6B  4F4D 2061 
08001B6F  6E64 2041 
08001B73  4443      
08001B75  2F44 4143 2971          dc.b      47,68,65,67,32,84,101,115,116,105,110,103,0
08001B79  2054 6573 
08001B7D  7469 6E67 
08001B81  00        
                    2972   @lab3_p~1_26:
08001B82  0D0A 00   2973          dc.b      13,10,0
                    2974   @lab3_p~1_27:
08001B86  0D0A 496E 2975          dc.b      13,10,73,110,112,117,116,32,49,32,70,111,114
08001B8A  7075 7420 
08001B8E  3120 466F 
08001B92  72        
08001B93  2057 7269 2976          dc.b      32,87,114,105,116,101,32,66,121,116,101,0
08001B97  7465 2042 
08001B9B  7974 6500 
                    2977   @lab3_p~1_28:
08001BA0  0D0A 496E 2978          dc.b      13,10,73,110,112,117,116,32,50,32,70,111,114
08001BA4  7075 7420 
08001BA8  3220 466F 
08001BAC  72        
08001BAD  2052 6561 2979          dc.b      32,82,101,97,100,32,66,121,116,101,0
08001BB1  6420 4279 
08001BB5  7465 00   
                    2980   @lab3_p~1_29:
08001BB8  0D0A 496E 2981          dc.b      13,10,73,110,112,117,116,32,51,32,70,111,114
08001BBC  7075 7420 
08001BC0  3320 466F 
08001BC4  72        
08001BC5  2057 7269 2982          dc.b      32,87,114,105,116,101,32,40,117,112,32,116,111
08001BC9  7465 2028 
08001BCD  7570 2074 
08001BD1  6F        
08001BD2  2920 3132 2983          dc.b      41,32,49,50,56,75,32,98,121,116,101,115,0
08001BD6  384B 2062 
08001BDA  7974 6573 
08001BDE  00        
                    2984   @lab3_p~1_30:
08001BE0  0D0A 496E 2985          dc.b      13,10,73,110,112,117,116,32,52,32,70,111,114
08001BE4  7075 7420 
08001BE8  3420 466F 
08001BEC  72        
08001BED  2052 6561 2986          dc.b      32,82,101,97,100,32,40,117,112,32,116,111,41
08001BF1  6420 2875 
08001BF5  7020 746F 
08001BF9  29        
08001BFA  2031 3238 2987          dc.b      32,49,50,56,75,32,98,121,116,101,115,0
08001BFE  4B20 6279 
08001C02  7465 7300 
                    2988   @lab3_p~1_31:
08001C06  0D0A 496E 2989          dc.b      13,10,73,110,112,117,116,32,53,32,70,111,114
08001C0A  7075 7420 
08001C0E  3520 466F 
08001C12  72        
08001C13  204C 4544 2990          dc.b      32,76,69,68,32,40,68,65,67,32,70,117,110,99
08001C17  2028 4441 
08001C1B  4320 4675 
08001C1F  6E63      
08001C21  7469 6F6E 2991          dc.b      116,105,111,110,41,0
08001C25  2900      
                    2992   @lab3_p~1_32:
08001C28  0D0A 496E 2993          dc.b      13,10,73,110,112,117,116,32,54,32,70,111,114
08001C2C  7075 7420 
08001C30  3620 466F 
08001C34  72        
08001C35  2041 6C6C 2994          dc.b      32,65,108,108,32,83,101,110,115,111,114,32,82
08001C39  2053 656E 
08001C3D  736F 7220 
08001C41  52        
08001C42  6561 6469 2995          dc.b      101,97,100,105,110,103,115,32,40,65,68,67,32
08001C46  6E67 7320 
08001C4A  2841 4443 
08001C4E  20        
08001C4F  4675 6E63 2996          dc.b      70,117,110,99,116,105,111,110,41,0
08001C53  7469 6F6E 
08001C57  2900      
                    2997   @lab3_p~1_33:
08001C5A  0D0A 454E 2998          dc.b      13,10,69,78,84,69,82,32,83,69,76,69,67,84,73
08001C5E  5445 5220 
08001C62  5345 4C45 
08001C66  4354 49   
08001C69  4F4E 3A20 2999          dc.b      79,78,58,32,0
08001C6D  00        
                    3000   @lab3_p~1_34:
08001C6E  0D0A 596F 3001          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
08001C72  7520 6861 
08001C76  7665 2073 
08001C7A  65        
08001C7B  6C65 6374 3002          dc.b      108,101,99,116,101,100,32,87,114,105,116,101
08001C7F  6564 2057 
08001C83  7269 7465 
08001C87  2042 7974 3003          dc.b      32,66,121,116,101,0
08001C8B  6500      
                    3004   @lab3_p~1_35:
08001C8E  0D0A 456E 3005          dc.b      13,10,69,110,116,101,114,32,98,121,116,101,32
08001C92  7465 7220 
08001C96  6279 7465 
08001C9A  20        
08001C9B  746F 2077 3006          dc.b      116,111,32,119,114,105,116,101,58,32,0
08001C9F  7269 7465 
08001CA3  3A20 00   
                    3007   @lab3_p~1_36:
08001CA6  0D0A 456E 3008          dc.b      13,10,69,110,116,101,114,32,117,112,112,101
08001CAA  7465 7220 
08001CAE  7570 7065 
08001CB2  7220 6164 3009          dc.b      114,32,97,100,100,114,101,115,115,58,32,0
08001CB6  6472 6573 
08001CBA  733A 2000 
                    3010   @lab3_p~1_37:
08001CBE  0D0A 456E 3011          dc.b      13,10,69,110,116,101,114,32,108,111,119,101
08001CC2  7465 7220 
08001CC6  6C6F 7765 
08001CCA  7220 6164 3012          dc.b      114,32,97,100,100,114,101,115,115,58,32,0
08001CCE  6472 6573 
08001CD2  733A 2000 
                    3013   @lab3_p~1_38:
08001CD6  0D0A 456E 3014          dc.b      13,10,69,110,116,101,114,32,98,108,111,99,107
08001CDA  7465 7220 
08001CDE  626C 6F63 
08001CE2  6B        
08001CE3  206E 756D 3015          dc.b      32,110,117,109,98,101,114,32,40,48,32,111,114
08001CE7  6265 7220 
08001CEB  2830 206F 
08001CEF  72        
08001CF0  2031 293A 3016          dc.b      32,49,41,58,32,0
08001CF4  2000      
                    3017   @lab3_p~1_39:
08001CF6  0D0A 5772 3018          dc.b      13,10,87,114,105,116,105,110,103,32,98,121,116
08001CFA  6974 696E 
08001CFE  6720 6279 
08001D02  74        
08001D03  6520 2578 3019          dc.b      101,32,37,120,32,116,111,32,117,112,112,101
08001D07  2074 6F20 
08001D0B  7570 7065 
08001D0F  7220 6164 3020          dc.b      114,32,97,100,100,114,32,37,120,44,32,108,111
08001D13  6472 2025 
08001D17  782C 206C 
08001D1B  6F        
08001D1C  7765 7220 3021          dc.b      119,101,114,32,97,100,100,114,32,37,120,44,32
08001D20  6164 6472 
08001D24  2025 782C 
08001D28  20        
08001D29  626C 6F63 3022          dc.b      98,108,111,99,107,32,110,117,109,98,101,114
08001D2D  6B20 6E75 
08001D31  6D62 6572 
08001D35  2025 642E 3023          dc.b      32,37,100,46,46,46,46,0
08001D39  2E2E 2E00 
                    3024   @lab3_p~1_40:
08001D3E  0D0A 4279 3025          dc.b      13,10,66,121,116,101,32,119,114,105,116,101
08001D42  7465 2077 
08001D46  7269 7465 
08001D4A  2063 6F6D 3026          dc.b      32,99,111,109,112,108,101,116,101,100,0
08001D4E  706C 6574 
08001D52  6564 00   
                    3027   @lab3_p~1_41:
08001D56  0D0A 596F 3028          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
08001D5A  7520 6861 
08001D5E  7665 2073 
08001D62  65        
08001D63  6C65 6374 3029          dc.b      108,101,99,116,101,100,32,82,101,97,100,32,66
08001D67  6564 2052 
08001D6B  6561 6420 
08001D6F  42        
08001D70  7974 6500 3030          dc.b      121,116,101,0
                    3031   @lab3_p~1_42:
08001D74  0D0A 5265 3032          dc.b      13,10,82,101,97,100,105,110,103,32,98,121,116
08001D78  6164 696E 
08001D7C  6720 6279 
08001D80  74        
08001D81  6520 6672 3033          dc.b      101,32,102,114,111,109,32,117,112,112,101,114
08001D85  6F6D 2075 
08001D89  7070 6572 
08001D8D  2061 6464 3034          dc.b      32,97,100,100,114,32,37,120,44,32,108,111,119
08001D91  7220 2578 
08001D95  2C20 6C6F 
08001D99  77        
08001D9A  6572 2061 3035          dc.b      101,114,32,97,100,100,114,32,37,120,44,32,98
08001D9E  6464 7220 
08001DA2  2578 2C20 
08001DA6  62        
08001DA7  6C6F 636B 3036          dc.b      108,111,99,107,32,110,117,109,98,101,114,32
08001DAB  206E 756D 
08001DAF  6265 7220 
08001DB3  2564 2E2E 3037          dc.b      37,100,46,46,46,46,0
08001DB7  2E2E 00   
                    3038   @lab3_p~1_43:
08001DBA  0D0A 4279 3039          dc.b      13,10,66,121,116,101,32,114,101,97,100,32,99
08001DBE  7465 2072 
08001DC2  6561 6420 
08001DC6  63        
08001DC7  6F6D 706C 3040          dc.b      111,109,112,108,101,116,101,100,0
08001DCB  6574 6564 
08001DCF  00        
                    3041   @lab3_p~1_44:
08001DD0  0D0A 596F 3042          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
08001DD4  7520 6861 
08001DD8  7665 2073 
08001DDC  65        
08001DDD  6C65 6374 3043          dc.b      108,101,99,116,101,100,32,87,114,105,116,101
08001DE1  6564 2057 
08001DE5  7269 7465 
08001DE9  2031 3238 3044          dc.b      32,49,50,56,107,32,66,121,116,101,0
08001DED  6B20 4279 
08001DF1  7465 00   
                    3045   @lab3_p~1_45:
08001DF4  0D0A 456E 3046          dc.b      13,10,69,110,116,101,114,32,98,121,116,101,115
08001DF8  7465 7220 
08001DFC  6279 7465 
08001E00  73        
08001E01  2074 6F20 3047          dc.b      32,116,111,32,119,114,105,116,101,58,32,0
08001E05  7772 6974 
08001E09  653A 2000 
                    3048   @lab3_p~1_46:
08001E0E  0D0A 5772 3049          dc.b      13,10,87,114,105,116,105,110,103,32,37,100,32
08001E12  6974 696E 
08001E16  6720 2564 
08001E1A  20        
08001E1B  6279 7465 3050          dc.b      98,121,116,101,115,32,116,111,32,117,112,112
08001E1F  7320 746F 
08001E23  2075 7070 
08001E27  6572 2061 3051          dc.b      101,114,32,97,100,100,114,32,37,120,44,32,108
08001E2B  6464 7220 
08001E2F  2578 2C20 
08001E33  6C        
08001E34  6F77 6572 3052          dc.b      111,119,101,114,32,97,100,100,114,32,37,120
08001E38  2061 6464 
08001E3C  7220 2578 
08001E40  2C20 626C 3053          dc.b      44,32,98,108,111,99,107,32,110,117,109,98,101
08001E44  6F63 6B20 
08001E48  6E75 6D62 
08001E4C  65        
08001E4D  7220 2564 3054          dc.b      114,32,37,100,46,46,46,46,0
08001E51  2E2E 2E2E 
08001E55  00        
                    3055   @lab3_p~1_47:
08001E56  0D0A 2855 3056          dc.b      13,10,40,85,112,32,116,111,41,32,49,50,56,107
08001E5A  7020 746F 
08001E5E  2920 3132 
08001E62  386B      
08001E64  2042 7974 3057          dc.b      32,66,121,116,101,32,119,114,105,116,101,32
08001E68  6520 7772 
08001E6C  6974 6520 
08001E70  636F 6D70 3058          dc.b      99,111,109,112,108,101,116,101,100,0
08001E74  6C65 7465 
08001E78  6400      
                    3059   @lab3_p~1_48:
08001E7A  0D0A 596F 3060          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
08001E7E  7520 6861 
08001E82  7665 2073 
08001E86  65        
08001E87  6C65 6374 3061          dc.b      108,101,99,116,101,100,32,82,101,97,100,32,49
08001E8B  6564 2052 
08001E8F  6561 6420 
08001E93  31        
08001E94  3238 6B20 3062          dc.b      50,56,107,32,66,121,116,101,0
08001E98  4279 7465 
08001E9C  00        
                    3063   @lab3_p~1_49:
08001E9E  0D0A 456E 3064          dc.b      13,10,69,110,116,101,114,32,98,121,116,101,115
08001EA2  7465 7220 
08001EA6  6279 7465 
08001EAA  73        
08001EAB  2074 6F20 3065          dc.b      32,116,111,32,114,101,97,100,58,32,0
08001EAF  7265 6164 
08001EB3  3A20 00   
                    3066   @lab3_p~1_50:
08001EB6  0D0A 5265 3067          dc.b      13,10,82,101,97,100,105,110,103,32,37,100,32
08001EBA  6164 696E 
08001EBE  6720 2564 
08001EC2  20        
08001EC3  6279 7465 3068          dc.b      98,121,116,101,115,32,102,114,111,109,32,117
08001EC7  7320 6672 
08001ECB  6F6D 2075 
08001ECF  7070 6572 3069          dc.b      112,112,101,114,32,97,100,100,114,32,37,120
08001ED3  2061 6464 
08001ED7  7220 2578 
08001EDB  2C20 6C6F 3070          dc.b      44,32,108,111,119,101,114,32,97,100,100,114
08001EDF  7765 7220 
08001EE3  6164 6472 
08001EE7  2025 782C 3071          dc.b      32,37,120,44,32,98,108,111,99,107,32,110,117
08001EEB  2062 6C6F 
08001EEF  636B 206E 
08001EF3  75        
08001EF4  6D62 6572 3072          dc.b      109,98,101,114,32,37,100,46,46,46,46,0
08001EF8  2025 642E 
08001EFC  2E2E 2E00 
                    3073   @lab3_p~1_51:
08001F00  0D0A 2855 3074          dc.b      13,10,40,85,112,32,116,111,41,32,49,50,56,107
08001F04  7020 746F 
08001F08  2920 3132 
08001F0C  386B      
08001F0E  2042 7974 3075          dc.b      32,66,121,116,101,32,114,101,97,100,32,99,111
08001F12  6520 7265 
08001F16  6164 2063 
08001F1A  6F        
08001F1B  6D70 6C65 3076          dc.b      109,112,108,101,116,101,100,0
08001F1F  7465 6400 
                    3077   @lab3_p~1_52:
08001F24  0D0A 596F 3078          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
08001F28  7520 6861 
08001F2C  7665 2073 
08001F30  65        
08001F31  6C65 6374 3079          dc.b      108,101,99,116,101,100,32,76,69,68,32,40,68
08001F35  6564 204C 
08001F39  4544 2028 
08001F3D  44        
08001F3E  4143 2900 3080          dc.b      65,67,41,0
                    3081   @lab3_p~1_53:
08001F42  0D0A 5368 3082          dc.b      13,10,83,104,111,119,105,110,103,32,99,111,110
08001F46  6F77 696E 
08001F4A  6720 636F 
08001F4E  6E        
08001F4F  7469 6E6F 3083          dc.b      116,105,110,111,117,115,32,115,116,114,101,97
08001F53  7573 2073 
08001F57  7472 6561 
08001F5B  6D69 6E67 3084          dc.b      109,105,110,103,32,100,97,116,97,32,111,110
08001F5F  2064 6174 
08001F63  6120 6F6E 
08001F67  204C 4544 3085          dc.b      32,76,69,68,46,46,46,46,0
08001F6B  2E2E 2E2E 
08001F6F  00        
                    3086   @lab3_p~1_54:
08001F70  0D0A 596F 3087          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
08001F74  7520 6861 
08001F78  7665 2073 
08001F7C  65        
08001F7D  6C65 6374 3088          dc.b      108,101,99,116,101,100,32,83,101,110,115,111
08001F81  6564 2053 
08001F85  656E 736F 
08001F89  7220 5265 3089          dc.b      114,32,82,101,97,100,115,32,40,65,68,67,32,70
08001F8D  6164 7320 
08001F91  2841 4443 
08001F95  2046      
08001F97  756E 6374 3090          dc.b      117,110,99,116,105,111,110,41,0
08001F9B  696F 6E29 
08001F9F  00        
                    3091   @lab3_p~1_55:
08001FA0  0D0A 5368 3092          dc.b      13,10,83,104,111,119,105,110,103,32,114,101
08001FA4  6F77 696E 
08001FA8  6720 7265 
08001FAC  6164 696E 3093          dc.b      97,100,105,110,103,115,32,102,114,111,109,32
08001FB0  6773 2066 
08001FB4  726F 6D20 
08001FB8  3320 7365 3094          dc.b      51,32,115,101,110,115,111,114,115,46,46,46,46
08001FBC  6E73 6F72 
08001FC0  732E 2E2E 
08001FC4  2E        
08001FC5  00        3095          dc.b      0
                    3096   @lab3_p~1_56:
08001FC6  0D0A 2A2A 3097          dc.b      13,10,42,42,42,42,42,42,42,42,42,42,42,42,42
08001FCA  2A2A 2A2A 
08001FCE  2A2A 2A2A 
08001FD2  2A2A 2A   
08001FD5  2A2A 2A2A 3098          dc.b      42,42,42,42,42,42,42,42,42,42,42,42,42,42,42
08001FD9  2A2A 2A2A 
08001FDD  2A2A 2A2A 
08001FE1  2A2A 2A   
08001FE4  2A2A 2A2A 3099          dc.b      42,42,42,42,42,42,42,42,42,42,42,42,42,42,42
08001FE8  2A2A 2A2A 
08001FEC  2A2A 2A2A 
08001FF0  2A2A 2A   
08001FF3  2A2A 2A2A 3100          dc.b      42,42,42,42,0
08001FF7  00        
                    3101          section   data
08001FF8            3102                   align
                    3103   
                    3104   *********************************************************************************************************************************************************
                    3105   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    3106   ********************************************************************************************************************************************************
                    3107   
          0800 1FF8 3108   DataStart       equ       *
08001FF8            3109   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
08001FFC            3110   __allocp:       ds.l      1                    start of free memory block list
08002000            3111   __heap:         ds.l      1                    begin of free memory
                    3112   
                    3113   
                    3114   _Write_Enable_Command:
08002004  0000 0006 3115          dc.l      6
                    3116   _Page_Program_Command:
08002008  0000 0002 3117          dc.l      2
                    3118   _Erase_Chip_Command:
0800200C  0000 00C7 3119          dc.l      199
                    3120   _Read_Status_Register_Command:
08002010  0000 0005 3121          dc.l      5
                    3122   _Read_Flash_Chip_Command:
08002014  0000 0003 3123          dc.l      3
                    3124   _First_Address_Byte:
08002018  0000 0000 3125          dc.l      0
                    3126   _Test_Data_Byte:
0800201C  0000 0009 3127          dc.l      9
                    3128   _Dummy_Data_Byte:
08002020  0000 00FF 3129          dc.l      255
                    3130   @itoa_1:
08002024  2D32 3134 3131          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08002028  3734 3833 
0800202C  3634 3800 
                    3132          section   bss
08002030            3133                   align
                    3134   
          0800 2030 3135   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 0038 3136   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    3137   
                    3138   *********************************************************************************************************
                    3139   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    3140   *********************************************************************************************************
          0800 2030 3141   BssStart       equ       *
                    3142   
                    3143          section   heap
08002030            3144                  align
                    3145   
          0800 2030 3146   BssEnd         equ       *
          0000 0000 3147   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    3148   
                    3149   *********************************************************************************************************
                    3150   * Section for Heap
                    3151   *********************************************************************************************************
                    3152   
          0800 2030 3153   heap           equ       *
08002030            3154                  align
          0800 0000

Assembly errors: 0
